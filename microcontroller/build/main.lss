
build/main.axf:     file format elf32-littlearm

Contents of the .debug_info section:

  Compilation Unit @ offset 0x0:
   Length:        0xc6 (32-bit)
   Version:       4
   Abbrev Offset: 0x0
   Pointer Size:  4
 <0><b>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <c>   DW_AT_producer    : (indirect string, offset: 0x7e): GNU C99 9.3.1 20200408 (release) -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=softfp -march=armv7e-m+fp -g -Os -O0 -std=c99 -ffunction-sections -fdata-sections
    <10>   DW_AT_language    : 12	(ANSI C99)
    <11>   DW_AT_name        : (indirect string, offset: 0x0): adc.c
    <15>   DW_AT_comp_dir    : (indirect string, offset: 0x12f): /home/balder/Documents/uni/lectures/Semester 4/semesterproj/microcontroller
    <19>   DW_AT_ranges      : 0x0
    <1d>   DW_AT_low_pc      : 0x0
    <21>   DW_AT_stmt_list   : 0x0
 <1><25>: Abbrev Number: 2 (DW_TAG_base_type)
    <26>   DW_AT_byte_size   : 1
    <27>   DW_AT_encoding    : 6	(signed char)
    <28>   DW_AT_name        : (indirect string, offset: 0x1e): signed char
 <1><2c>: Abbrev Number: 2 (DW_TAG_base_type)
    <2d>   DW_AT_byte_size   : 1
    <2e>   DW_AT_encoding    : 8	(unsigned char)
    <2f>   DW_AT_name        : (indirect string, offset: 0x1c): unsigned char
 <1><33>: Abbrev Number: 2 (DW_TAG_base_type)
    <34>   DW_AT_byte_size   : 2
    <35>   DW_AT_encoding    : 5	(signed)
    <36>   DW_AT_name        : (indirect string, offset: 0x4f): short int
 <1><3a>: Abbrev Number: 2 (DW_TAG_base_type)
    <3b>   DW_AT_byte_size   : 2
    <3c>   DW_AT_encoding    : 7	(unsigned)
    <3d>   DW_AT_name        : (indirect string, offset: 0x2a): short unsigned int
 <1><41>: Abbrev Number: 2 (DW_TAG_base_type)
    <42>   DW_AT_byte_size   : 4
    <43>   DW_AT_encoding    : 5	(signed)
    <44>   DW_AT_name        : (indirect string, offset: 0x75): long int
 <1><48>: Abbrev Number: 3 (DW_TAG_typedef)
    <49>   DW_AT_name        : (indirect string, offset: 0x3d): __uint32_t
    <4d>   DW_AT_decl_file   : 2
    <4e>   DW_AT_decl_line   : 79
    <4f>   DW_AT_decl_column : 25
    <50>   DW_AT_type        : <0x54>
 <1><54>: Abbrev Number: 2 (DW_TAG_base_type)
    <55>   DW_AT_byte_size   : 4
    <56>   DW_AT_encoding    : 7	(unsigned)
    <57>   DW_AT_name        : (indirect string, offset: 0x5e): long unsigned int
 <1><5b>: Abbrev Number: 2 (DW_TAG_base_type)
    <5c>   DW_AT_byte_size   : 8
    <5d>   DW_AT_encoding    : 5	(signed)
    <5e>   DW_AT_name        : (indirect string, offset: 0x70): long long int
 <1><62>: Abbrev Number: 2 (DW_TAG_base_type)
    <63>   DW_AT_byte_size   : 8
    <64>   DW_AT_encoding    : 7	(unsigned)
    <65>   DW_AT_name        : (indirect string, offset: 0x59): long long unsigned int
 <1><69>: Abbrev Number: 4 (DW_TAG_base_type)
    <6a>   DW_AT_byte_size   : 4
    <6b>   DW_AT_encoding    : 5	(signed)
    <6c>   DW_AT_name        : int
 <1><70>: Abbrev Number: 2 (DW_TAG_base_type)
    <71>   DW_AT_byte_size   : 4
    <72>   DW_AT_encoding    : 7	(unsigned)
    <73>   DW_AT_name        : (indirect string, offset: 0x63): unsigned int
 <1><77>: Abbrev Number: 3 (DW_TAG_typedef)
    <78>   DW_AT_name        : (indirect string, offset: 0x3f): uint32_t
    <7c>   DW_AT_decl_file   : 3
    <7d>   DW_AT_decl_line   : 48
    <7e>   DW_AT_decl_column : 20
    <7f>   DW_AT_type        : <0x48>
 <1><83>: Abbrev Number: 3 (DW_TAG_typedef)
    <84>   DW_AT_name        : (indirect string, offset: 0xf): INT16U
    <88>   DW_AT_decl_file   : 4
    <89>   DW_AT_decl_line   : 24
    <8a>   DW_AT_decl_column : 24
    <8b>   DW_AT_type        : <0x3a>
 <1><8f>: Abbrev Number: 2 (DW_TAG_base_type)
    <90>   DW_AT_byte_size   : 4
    <91>   DW_AT_encoding    : 4	(float)
    <92>   DW_AT_name        : (indirect string, offset: 0x16): float
 <1><96>: Abbrev Number: 2 (DW_TAG_base_type)
    <97>   DW_AT_byte_size   : 8
    <98>   DW_AT_encoding    : 4	(float)
    <99>   DW_AT_name        : (indirect string, offset: 0x48): double
 <1><9d>: Abbrev Number: 5 (DW_TAG_subprogram)
    <9e>   DW_AT_external    : 1
    <9e>   DW_AT_name        : (indirect string, offset: 0x6): init_adc
    <a2>   DW_AT_decl_file   : 1
    <a3>   DW_AT_decl_line   : 13
    <a4>   DW_AT_decl_column : 1
    <a5>   DW_AT_type        : <0x69>
    <a9>   DW_AT_low_pc      : 0x284
    <ad>   DW_AT_high_pc     : 0x74
    <b1>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <b3>   DW_AT_GNU_all_call_sites: 1
 <1><b3>: Abbrev Number: 5 (DW_TAG_subprogram)
    <b4>   DW_AT_external    : 1
    <b4>   DW_AT_name        : (indirect string, offset: 0x127): get_adc
    <b8>   DW_AT_decl_file   : 1
    <b9>   DW_AT_decl_line   : 8
    <ba>   DW_AT_decl_column : 8
    <bb>   DW_AT_type        : <0x83>
    <bf>   DW_AT_low_pc      : 0x26c
    <c3>   DW_AT_high_pc     : 0x18
    <c7>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <c9>   DW_AT_GNU_all_call_sites: 1
 <1><c9>: Abbrev Number: 0
  Compilation Unit @ offset 0xca:
   Length:        0x111 (32-bit)
   Version:       4
   Abbrev Offset: 0x53
   Pointer Size:  4
 <0><d5>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <d6>   DW_AT_producer    : (indirect string, offset: 0x7e): GNU C99 9.3.1 20200408 (release) -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=softfp -march=armv7e-m+fp -g -Os -O0 -std=c99 -ffunction-sections -fdata-sections
    <da>   DW_AT_language    : 12	(ANSI C99)
    <db>   DW_AT_name        : (indirect string, offset: 0x1c9): gpio.c
    <df>   DW_AT_comp_dir    : (indirect string, offset: 0x12f): /home/balder/Documents/uni/lectures/Semester 4/semesterproj/microcontroller
    <e3>   DW_AT_ranges      : 0x18
    <e7>   DW_AT_low_pc      : 0x0
    <eb>   DW_AT_stmt_list   : 0x161
 <1><ef>: Abbrev Number: 2 (DW_TAG_enumeration_type)
    <f0>   DW_AT_name        : (indirect string, offset: 0x1c0): LEDColor
    <f4>   DW_AT_encoding    : 7	(unsigned)
    <f5>   DW_AT_byte_size   : 1
    <f6>   DW_AT_type        : <0x132>
    <fa>   DW_AT_decl_file   : 4
    <fb>   DW_AT_decl_line   : 2
    <fc>   DW_AT_decl_column : 6
    <fd>   DW_AT_sibling     : <0x132>
 <2><101>: Abbrev Number: 3 (DW_TAG_enumerator)
    <102>   DW_AT_name        : OFF
    <106>   DW_AT_const_value : 0
 <2><107>: Abbrev Number: 4 (DW_TAG_enumerator)
    <108>   DW_AT_name        : (indirect string, offset: 0x1b1): GREEN
    <10c>   DW_AT_const_value : 4
 <2><10d>: Abbrev Number: 4 (DW_TAG_enumerator)
    <10e>   DW_AT_name        : (indirect string, offset: 0x199): BLUE
    <112>   DW_AT_const_value : 2
 <2><113>: Abbrev Number: 4 (DW_TAG_enumerator)
    <114>   DW_AT_name        : (indirect string, offset: 0x19e): CYAN
    <118>   DW_AT_const_value : 6
 <2><119>: Abbrev Number: 3 (DW_TAG_enumerator)
    <11a>   DW_AT_name        : RED
    <11e>   DW_AT_const_value : 1
 <2><11f>: Abbrev Number: 4 (DW_TAG_enumerator)
    <120>   DW_AT_name        : (indirect string, offset: 0x1d0): YELLOW
    <124>   DW_AT_const_value : 5
 <2><125>: Abbrev Number: 4 (DW_TAG_enumerator)
    <126>   DW_AT_name        : (indirect string, offset: 0x1a3): MAGENTA
    <12a>   DW_AT_const_value : 3
 <2><12b>: Abbrev Number: 4 (DW_TAG_enumerator)
    <12c>   DW_AT_name        : (indirect string, offset: 0x1b7): WHITE
    <130>   DW_AT_const_value : 7
 <2><131>: Abbrev Number: 0
 <1><132>: Abbrev Number: 5 (DW_TAG_base_type)
    <133>   DW_AT_byte_size   : 1
    <134>   DW_AT_encoding    : 8	(unsigned char)
    <135>   DW_AT_name        : (indirect string, offset: 0x1c): unsigned char
 <1><139>: Abbrev Number: 5 (DW_TAG_base_type)
    <13a>   DW_AT_byte_size   : 1
    <13b>   DW_AT_encoding    : 6	(signed char)
    <13c>   DW_AT_name        : (indirect string, offset: 0x1e): signed char
 <1><140>: Abbrev Number: 5 (DW_TAG_base_type)
    <141>   DW_AT_byte_size   : 2
    <142>   DW_AT_encoding    : 5	(signed)
    <143>   DW_AT_name        : (indirect string, offset: 0x4f): short int
 <1><147>: Abbrev Number: 5 (DW_TAG_base_type)
    <148>   DW_AT_byte_size   : 2
    <149>   DW_AT_encoding    : 7	(unsigned)
    <14a>   DW_AT_name        : (indirect string, offset: 0x2a): short unsigned int
 <1><14e>: Abbrev Number: 5 (DW_TAG_base_type)
    <14f>   DW_AT_byte_size   : 4
    <150>   DW_AT_encoding    : 5	(signed)
    <151>   DW_AT_name        : (indirect string, offset: 0x75): long int
 <1><155>: Abbrev Number: 6 (DW_TAG_typedef)
    <156>   DW_AT_name        : (indirect string, offset: 0x3d): __uint32_t
    <15a>   DW_AT_decl_file   : 2
    <15b>   DW_AT_decl_line   : 79
    <15c>   DW_AT_decl_column : 25
    <15d>   DW_AT_type        : <0x161>
 <1><161>: Abbrev Number: 5 (DW_TAG_base_type)
    <162>   DW_AT_byte_size   : 4
    <163>   DW_AT_encoding    : 7	(unsigned)
    <164>   DW_AT_name        : (indirect string, offset: 0x5e): long unsigned int
 <1><168>: Abbrev Number: 5 (DW_TAG_base_type)
    <169>   DW_AT_byte_size   : 8
    <16a>   DW_AT_encoding    : 5	(signed)
    <16b>   DW_AT_name        : (indirect string, offset: 0x70): long long int
 <1><16f>: Abbrev Number: 5 (DW_TAG_base_type)
    <170>   DW_AT_byte_size   : 8
    <171>   DW_AT_encoding    : 7	(unsigned)
    <172>   DW_AT_name        : (indirect string, offset: 0x59): long long unsigned int
 <1><176>: Abbrev Number: 7 (DW_TAG_base_type)
    <177>   DW_AT_byte_size   : 4
    <178>   DW_AT_encoding    : 5	(signed)
    <179>   DW_AT_name        : int
 <1><17d>: Abbrev Number: 5 (DW_TAG_base_type)
    <17e>   DW_AT_byte_size   : 4
    <17f>   DW_AT_encoding    : 7	(unsigned)
    <180>   DW_AT_name        : (indirect string, offset: 0x63): unsigned int
 <1><184>: Abbrev Number: 6 (DW_TAG_typedef)
    <185>   DW_AT_name        : (indirect string, offset: 0x3f): uint32_t
    <189>   DW_AT_decl_file   : 3
    <18a>   DW_AT_decl_line   : 48
    <18b>   DW_AT_decl_column : 20
    <18c>   DW_AT_type        : <0x155>
 <1><190>: Abbrev Number: 8 (DW_TAG_subprogram)
    <191>   DW_AT_external    : 1
    <191>   DW_AT_name        : (indirect string, offset: 0x186): button_sw1_pressed
    <195>   DW_AT_decl_file   : 1
    <196>   DW_AT_decl_line   : 26
    <197>   DW_AT_decl_column : 5
    <198>   DW_AT_type        : <0x176>
    <19c>   DW_AT_low_pc      : 0x0
    <1a0>   DW_AT_high_pc     : 0x1c
    <1a4>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1a6>   DW_AT_GNU_all_call_sites: 1
 <1><1a6>: Abbrev Number: 9 (DW_TAG_subprogram)
    <1a7>   DW_AT_external    : 1
    <1a7>   DW_AT_name        : (indirect string, offset: 0x1bd): setLEDColor
    <1ab>   DW_AT_decl_file   : 1
    <1ac>   DW_AT_decl_line   : 24
    <1ad>   DW_AT_decl_column : 6
    <1ae>   DW_AT_prototyped  : 1
    <1ae>   DW_AT_low_pc      : 0x388
    <1b2>   DW_AT_high_pc     : 0x24
    <1b6>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1b8>   DW_AT_GNU_all_call_sites: 1
    <1b8>   DW_AT_sibling     : <0x1cc>
 <2><1bc>: Abbrev Number: 10 (DW_TAG_formal_parameter)
    <1bd>   DW_AT_name        : (indirect string, offset: 0x1ab): color
    <1c1>   DW_AT_decl_file   : 1
    <1c2>   DW_AT_decl_line   : 24
    <1c3>   DW_AT_decl_column : 32
    <1c4>   DW_AT_type        : <0xef>
    <1c8>   DW_AT_location    : 2 byte block: 91 77 	(DW_OP_fbreg: -9)
 <2><1cb>: Abbrev Number: 0
 <1><1cc>: Abbrev Number: 11 (DW_TAG_subprogram)
    <1cd>   DW_AT_external    : 1
    <1cd>   DW_AT_name        : (indirect string, offset: 0x17b): setupPortF
    <1d1>   DW_AT_decl_file   : 1
    <1d2>   DW_AT_decl_line   : 4
    <1d3>   DW_AT_decl_column : 6
    <1d4>   DW_AT_low_pc      : 0x2f8
    <1d8>   DW_AT_high_pc     : 0x90
    <1dc>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <1de>   DW_AT_GNU_all_call_sites: 1
 <1><1de>: Abbrev Number: 0
  Compilation Unit @ offset 0x1df:
   Length:        0x130 (32-bit)
   Version:       4
   Abbrev Offset: 0x112
   Pointer Size:  4
 <0><1ea>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <1eb>   DW_AT_producer    : (indirect string, offset: 0x7e): GNU C99 9.3.1 20200408 (release) -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=softfp -march=armv7e-m+fp -g -Os -O0 -std=c99 -ffunction-sections -fdata-sections
    <1ef>   DW_AT_language    : 12	(ANSI C99)
    <1f0>   DW_AT_name        : (indirect string, offset: 0x1f5): main.c
    <1f4>   DW_AT_comp_dir    : (indirect string, offset: 0x12f): /home/balder/Documents/uni/lectures/Semester 4/semesterproj/microcontroller
    <1f8>   DW_AT_ranges      : 0x38
    <1fc>   DW_AT_low_pc      : 0x0
    <200>   DW_AT_stmt_list   : 0x2f9
 <1><204>: Abbrev Number: 2 (DW_TAG_base_type)
    <205>   DW_AT_byte_size   : 1
    <206>   DW_AT_encoding    : 8	(unsigned char)
    <207>   DW_AT_name        : (indirect string, offset: 0x1c): unsigned char
 <1><20b>: Abbrev Number: 2 (DW_TAG_base_type)
    <20c>   DW_AT_byte_size   : 1
    <20d>   DW_AT_encoding    : 6	(signed char)
    <20e>   DW_AT_name        : (indirect string, offset: 0x1e): signed char
 <1><212>: Abbrev Number: 3 (DW_TAG_typedef)
    <213>   DW_AT_name        : (indirect string, offset: 0xf): INT16U
    <217>   DW_AT_decl_file   : 2
    <218>   DW_AT_decl_line   : 24
    <219>   DW_AT_decl_column : 24
    <21a>   DW_AT_type        : <0x21e>
 <1><21e>: Abbrev Number: 2 (DW_TAG_base_type)
    <21f>   DW_AT_byte_size   : 2
    <220>   DW_AT_encoding    : 7	(unsigned)
    <221>   DW_AT_name        : (indirect string, offset: 0x2a): short unsigned int
 <1><225>: Abbrev Number: 2 (DW_TAG_base_type)
    <226>   DW_AT_byte_size   : 2
    <227>   DW_AT_encoding    : 5	(signed)
    <228>   DW_AT_name        : (indirect string, offset: 0x4f): short int
 <1><22c>: Abbrev Number: 2 (DW_TAG_base_type)
    <22d>   DW_AT_byte_size   : 4
    <22e>   DW_AT_encoding    : 7	(unsigned)
    <22f>   DW_AT_name        : (indirect string, offset: 0x5e): long unsigned int
 <1><233>: Abbrev Number: 2 (DW_TAG_base_type)
    <234>   DW_AT_byte_size   : 4
    <235>   DW_AT_encoding    : 5	(signed)
    <236>   DW_AT_name        : (indirect string, offset: 0x75): long int
 <1><23a>: Abbrev Number: 2 (DW_TAG_base_type)
    <23b>   DW_AT_byte_size   : 8
    <23c>   DW_AT_encoding    : 7	(unsigned)
    <23d>   DW_AT_name        : (indirect string, offset: 0x59): long long unsigned int
 <1><241>: Abbrev Number: 2 (DW_TAG_base_type)
    <242>   DW_AT_byte_size   : 8
    <243>   DW_AT_encoding    : 5	(signed)
    <244>   DW_AT_name        : (indirect string, offset: 0x70): long long int
 <1><248>: Abbrev Number: 2 (DW_TAG_base_type)
    <249>   DW_AT_byte_size   : 4
    <24a>   DW_AT_encoding    : 4	(float)
    <24b>   DW_AT_name        : (indirect string, offset: 0x16): float
 <1><24f>: Abbrev Number: 2 (DW_TAG_base_type)
    <250>   DW_AT_byte_size   : 8
    <251>   DW_AT_encoding    : 4	(float)
    <252>   DW_AT_name        : (indirect string, offset: 0x48): double
 <1><256>: Abbrev Number: 4 (DW_TAG_enumeration_type)
    <257>   DW_AT_name        : (indirect string, offset: 0x1c0): LEDColor
    <25b>   DW_AT_encoding    : 7	(unsigned)
    <25c>   DW_AT_byte_size   : 1
    <25d>   DW_AT_type        : <0x204>
    <261>   DW_AT_decl_file   : 3
    <262>   DW_AT_decl_line   : 2
    <263>   DW_AT_decl_column : 6
    <264>   DW_AT_sibling     : <0x299>
 <2><268>: Abbrev Number: 5 (DW_TAG_enumerator)
    <269>   DW_AT_name        : OFF
    <26d>   DW_AT_const_value : 0
 <2><26e>: Abbrev Number: 6 (DW_TAG_enumerator)
    <26f>   DW_AT_name        : (indirect string, offset: 0x1b1): GREEN
    <273>   DW_AT_const_value : 4
 <2><274>: Abbrev Number: 6 (DW_TAG_enumerator)
    <275>   DW_AT_name        : (indirect string, offset: 0x199): BLUE
    <279>   DW_AT_const_value : 2
 <2><27a>: Abbrev Number: 6 (DW_TAG_enumerator)
    <27b>   DW_AT_name        : (indirect string, offset: 0x19e): CYAN
    <27f>   DW_AT_const_value : 6
 <2><280>: Abbrev Number: 5 (DW_TAG_enumerator)
    <281>   DW_AT_name        : RED
    <285>   DW_AT_const_value : 1
 <2><286>: Abbrev Number: 6 (DW_TAG_enumerator)
    <287>   DW_AT_name        : (indirect string, offset: 0x1d0): YELLOW
    <28b>   DW_AT_const_value : 5
 <2><28c>: Abbrev Number: 6 (DW_TAG_enumerator)
    <28d>   DW_AT_name        : (indirect string, offset: 0x1a3): MAGENTA
    <291>   DW_AT_const_value : 3
 <2><292>: Abbrev Number: 6 (DW_TAG_enumerator)
    <293>   DW_AT_name        : (indirect string, offset: 0x1b7): WHITE
    <297>   DW_AT_const_value : 7
 <2><298>: Abbrev Number: 0
 <1><299>: Abbrev Number: 7 (DW_TAG_base_type)
    <29a>   DW_AT_byte_size   : 4
    <29b>   DW_AT_encoding    : 5	(signed)
    <29c>   DW_AT_name        : int
 <1><2a0>: Abbrev Number: 2 (DW_TAG_base_type)
    <2a1>   DW_AT_byte_size   : 4
    <2a2>   DW_AT_encoding    : 7	(unsigned)
    <2a3>   DW_AT_name        : (indirect string, offset: 0x63): unsigned int
 <1><2a7>: Abbrev Number: 8 (DW_TAG_subprogram)
    <2a8>   DW_AT_external    : 1
    <2a8>   DW_AT_name        : (indirect string, offset: 0x1f0): main
    <2ac>   DW_AT_decl_file   : 1
    <2ad>   DW_AT_decl_line   : 16
    <2ae>   DW_AT_decl_column : 5
    <2af>   DW_AT_prototyped  : 1
    <2af>   DW_AT_type        : <0x299>
    <2b3>   DW_AT_low_pc      : 0x3c8
    <2b7>   DW_AT_high_pc     : 0x38
    <2bb>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <2bd>   DW_AT_GNU_all_tail_call_sites: 1
    <2bd>   DW_AT_sibling     : <0x2f9>
 <2><2c1>: Abbrev Number: 9 (DW_TAG_lexical_block)
    <2c2>   DW_AT_low_pc      : 0x3de
    <2c6>   DW_AT_high_pc     : 0x1c
 <3><2ca>: Abbrev Number: 10 (DW_TAG_variable)
    <2cb>   DW_AT_name        : (indirect string, offset: 0x1fc): input
    <2cf>   DW_AT_decl_file   : 1
    <2d0>   DW_AT_decl_line   : 22
    <2d1>   DW_AT_decl_column : 16
    <2d2>   DW_AT_type        : <0x212>
    <2d6>   DW_AT_location    : 2 byte block: 91 76 	(DW_OP_fbreg: -10)
 <3><2d9>: Abbrev Number: 10 (DW_TAG_variable)
    <2da>   DW_AT_name        : (indirect string, offset: 0x1e6): high_byte
    <2de>   DW_AT_decl_file   : 1
    <2df>   DW_AT_decl_line   : 23
    <2e0>   DW_AT_decl_column : 14
    <2e1>   DW_AT_type        : <0x2f9>
    <2e5>   DW_AT_location    : 2 byte block: 91 75 	(DW_OP_fbreg: -11)
 <3><2e8>: Abbrev Number: 10 (DW_TAG_variable)
    <2e9>   DW_AT_name        : (indirect string, offset: 0x1d7): low_byte
    <2ed>   DW_AT_decl_file   : 1
    <2ee>   DW_AT_decl_line   : 24
    <2ef>   DW_AT_decl_column : 14
    <2f0>   DW_AT_type        : <0x2f9>
    <2f4>   DW_AT_location    : 2 byte block: 91 74 	(DW_OP_fbreg: -12)
 <3><2f7>: Abbrev Number: 0
 <2><2f8>: Abbrev Number: 0
 <1><2f9>: Abbrev Number: 2 (DW_TAG_base_type)
    <2fa>   DW_AT_byte_size   : 1
    <2fb>   DW_AT_encoding    : 8	(unsigned char)
    <2fc>   DW_AT_name        : (indirect string, offset: 0x25): char
 <1><300>: Abbrev Number: 11 (DW_TAG_subprogram)
    <301>   DW_AT_external    : 1
    <301>   DW_AT_name        : (indirect string, offset: 0x1e0): setup
    <305>   DW_AT_decl_file   : 1
    <306>   DW_AT_decl_line   : 9
    <307>   DW_AT_decl_column : 6
    <308>   DW_AT_low_pc      : 0x3ac
    <30c>   DW_AT_high_pc     : 0x1a
    <310>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <312>   DW_AT_GNU_all_tail_call_sites: 1
 <1><312>: Abbrev Number: 0
  Compilation Unit @ offset 0x313:
   Length:        0x193 (32-bit)
   Version:       4
   Abbrev Offset: 0x1c2
   Pointer Size:  4
 <0><31e>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <31f>   DW_AT_producer    : (indirect string, offset: 0x7e): GNU C99 9.3.1 20200408 (release) -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=softfp -march=armv7e-m+fp -g -Os -O0 -std=c99 -ffunction-sections -fdata-sections
    <323>   DW_AT_language    : 12	(ANSI C99)
    <324>   DW_AT_name        : (indirect string, offset: 0x266): startup_gcc.c
    <328>   DW_AT_comp_dir    : (indirect string, offset: 0x12f): /home/balder/Documents/uni/lectures/Semester 4/semesterproj/microcontroller
    <32c>   DW_AT_ranges      : 0x50
    <330>   DW_AT_low_pc      : 0x0
    <334>   DW_AT_stmt_list   : 0x387
 <1><338>: Abbrev Number: 2 (DW_TAG_base_type)
    <339>   DW_AT_byte_size   : 1
    <33a>   DW_AT_encoding    : 6	(signed char)
    <33b>   DW_AT_name        : (indirect string, offset: 0x1e): signed char
 <1><33f>: Abbrev Number: 2 (DW_TAG_base_type)
    <340>   DW_AT_byte_size   : 1
    <341>   DW_AT_encoding    : 8	(unsigned char)
    <342>   DW_AT_name        : (indirect string, offset: 0x1c): unsigned char
 <1><346>: Abbrev Number: 2 (DW_TAG_base_type)
    <347>   DW_AT_byte_size   : 2
    <348>   DW_AT_encoding    : 5	(signed)
    <349>   DW_AT_name        : (indirect string, offset: 0x4f): short int
 <1><34d>: Abbrev Number: 2 (DW_TAG_base_type)
    <34e>   DW_AT_byte_size   : 2
    <34f>   DW_AT_encoding    : 7	(unsigned)
    <350>   DW_AT_name        : (indirect string, offset: 0x2a): short unsigned int
 <1><354>: Abbrev Number: 2 (DW_TAG_base_type)
    <355>   DW_AT_byte_size   : 4
    <356>   DW_AT_encoding    : 5	(signed)
    <357>   DW_AT_name        : (indirect string, offset: 0x75): long int
 <1><35b>: Abbrev Number: 2 (DW_TAG_base_type)
    <35c>   DW_AT_byte_size   : 4
    <35d>   DW_AT_encoding    : 7	(unsigned)
    <35e>   DW_AT_name        : (indirect string, offset: 0x5e): long unsigned int
 <1><362>: Abbrev Number: 2 (DW_TAG_base_type)
    <363>   DW_AT_byte_size   : 8
    <364>   DW_AT_encoding    : 5	(signed)
    <365>   DW_AT_name        : (indirect string, offset: 0x70): long long int
 <1><369>: Abbrev Number: 2 (DW_TAG_base_type)
    <36a>   DW_AT_byte_size   : 8
    <36b>   DW_AT_encoding    : 7	(unsigned)
    <36c>   DW_AT_name        : (indirect string, offset: 0x59): long long unsigned int
 <1><370>: Abbrev Number: 3 (DW_TAG_base_type)
    <371>   DW_AT_byte_size   : 4
    <372>   DW_AT_encoding    : 5	(signed)
    <373>   DW_AT_name        : int
 <1><377>: Abbrev Number: 2 (DW_TAG_base_type)
    <378>   DW_AT_byte_size   : 4
    <379>   DW_AT_encoding    : 7	(unsigned)
    <37a>   DW_AT_name        : (indirect string, offset: 0x63): unsigned int
 <1><37e>: Abbrev Number: 4 (DW_TAG_array_type)
    <37f>   DW_AT_type        : <0x35b>
    <383>   DW_AT_sibling     : <0x38e>
 <2><387>: Abbrev Number: 5 (DW_TAG_subrange_type)
    <388>   DW_AT_type        : <0x377>
    <38c>   DW_AT_upper_bound : 63
 <2><38d>: Abbrev Number: 0
 <1><38e>: Abbrev Number: 6 (DW_TAG_variable)
    <38f>   DW_AT_name        : (indirect string, offset: 0x20d): pulStack
    <393>   DW_AT_decl_file   : 1
    <394>   DW_AT_decl_line   : 37
    <395>   DW_AT_decl_column : 22
    <396>   DW_AT_type        : <0x37e>
    <39a>   DW_AT_location    : 5 byte block: 3 0 0 0 20 	(DW_OP_addr: 20000000)
 <1><3a0>: Abbrev Number: 4 (DW_TAG_array_type)
    <3a1>   DW_AT_type        : <0x3bb>
    <3a5>   DW_AT_sibling     : <0x3b0>
 <2><3a9>: Abbrev Number: 5 (DW_TAG_subrange_type)
    <3aa>   DW_AT_type        : <0x377>
    <3ae>   DW_AT_upper_bound : 154
 <2><3af>: Abbrev Number: 0
 <1><3b0>: Abbrev Number: 7 (DW_TAG_const_type)
    <3b1>   DW_AT_type        : <0x3a0>
 <1><3b5>: Abbrev Number: 8 (DW_TAG_pointer_type)
    <3b6>   DW_AT_byte_size   : 4
    <3b7>   DW_AT_type        : <0x3c0>
 <1><3bb>: Abbrev Number: 7 (DW_TAG_const_type)
    <3bc>   DW_AT_type        : <0x3b5>
 <1><3c0>: Abbrev Number: 9 (DW_TAG_subroutine_type)
    <3c1>   DW_AT_prototyped  : 1
 <1><3c1>: Abbrev Number: 10 (DW_TAG_variable)
    <3c2>   DW_AT_name        : (indirect string, offset: 0x226): g_pfnVectors
    <3c6>   DW_AT_decl_file   : 1
    <3c7>   DW_AT_decl_line   : 45
    <3c8>   DW_AT_decl_column : 54
    <3c9>   DW_AT_type        : <0x3b0>
    <3cd>   DW_AT_external    : 1
    <3cd>   DW_AT_location    : 5 byte block: 3 0 0 0 0 	(DW_OP_addr: 0)
 <1><3d3>: Abbrev Number: 11 (DW_TAG_variable)
    <3d4>   DW_AT_name        : (indirect string, offset: 0x282): _etext
    <3d8>   DW_AT_decl_file   : 1
    <3d9>   DW_AT_decl_line   : 211
    <3da>   DW_AT_decl_column : 22
    <3db>   DW_AT_type        : <0x35b>
    <3df>   DW_AT_external    : 1
    <3df>   DW_AT_declaration : 1
 <1><3df>: Abbrev Number: 11 (DW_TAG_variable)
    <3e0>   DW_AT_name        : (indirect string, offset: 0x290): _data
    <3e4>   DW_AT_decl_file   : 1
    <3e5>   DW_AT_decl_line   : 212
    <3e6>   DW_AT_decl_column : 22
    <3e7>   DW_AT_type        : <0x35b>
    <3eb>   DW_AT_external    : 1
    <3eb>   DW_AT_declaration : 1
 <1><3eb>: Abbrev Number: 11 (DW_TAG_variable)
    <3ec>   DW_AT_name        : (indirect string, offset: 0x23c): _edata
    <3f0>   DW_AT_decl_file   : 1
    <3f1>   DW_AT_decl_line   : 213
    <3f2>   DW_AT_decl_column : 22
    <3f3>   DW_AT_type        : <0x35b>
    <3f7>   DW_AT_external    : 1
    <3f7>   DW_AT_declaration : 1
 <1><3f7>: Abbrev Number: 11 (DW_TAG_variable)
    <3f8>   DW_AT_name        : (indirect string, offset: 0x208): _bss
    <3fc>   DW_AT_decl_file   : 1
    <3fd>   DW_AT_decl_line   : 214
    <3fe>   DW_AT_decl_column : 22
    <3ff>   DW_AT_type        : <0x35b>
    <403>   DW_AT_external    : 1
    <403>   DW_AT_declaration : 1
 <1><403>: Abbrev Number: 11 (DW_TAG_variable)
    <404>   DW_AT_name        : (indirect string, offset: 0x202): _ebss
    <408>   DW_AT_decl_file   : 1
    <409>   DW_AT_decl_line   : 215
    <40a>   DW_AT_decl_column : 22
    <40b>   DW_AT_type        : <0x35b>
    <40f>   DW_AT_external    : 1
    <40f>   DW_AT_declaration : 1
 <1><40f>: Abbrev Number: 12 (DW_TAG_subprogram)
    <410>   DW_AT_external    : 1
    <410>   DW_AT_name        : (indirect string, offset: 0x274): GPIOF_Handler
    <414>   DW_AT_decl_file   : 1
    <415>   DW_AT_decl_line   : 312
    <417>   DW_AT_decl_column : 28
    <418>   DW_AT_prototyped  : 1
    <418>   DW_AT_low_pc      : 0x474
    <41c>   DW_AT_high_pc     : 0x6
    <420>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <422>   DW_AT_GNU_all_call_sites: 1
 <1><422>: Abbrev Number: 12 (DW_TAG_subprogram)
    <423>   DW_AT_external    : 1
    <423>   DW_AT_name        : (indirect string, offset: 0x216): SysTick_Handler
    <427>   DW_AT_decl_file   : 1
    <428>   DW_AT_decl_line   : 308
    <42a>   DW_AT_decl_column : 28
    <42b>   DW_AT_prototyped  : 1
    <42b>   DW_AT_low_pc      : 0x46e
    <42f>   DW_AT_high_pc     : 0x6
    <433>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <435>   DW_AT_GNU_all_call_sites: 1
 <1><435>: Abbrev Number: 13 (DW_TAG_subprogram)
    <436>   DW_AT_name        : (indirect string, offset: 0x24b): IntDefaultHandler
    <43a>   DW_AT_decl_file   : 1
    <43b>   DW_AT_decl_line   : 294
    <43d>   DW_AT_decl_column : 13
    <43e>   DW_AT_prototyped  : 1
    <43e>   DW_AT_low_pc      : 0x468
    <442>   DW_AT_high_pc     : 0x6
    <446>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <448>   DW_AT_GNU_all_call_sites: 1
 <1><448>: Abbrev Number: 13 (DW_TAG_subprogram)
    <449>   DW_AT_name        : (indirect string, offset: 0x25d): FaultISR
    <44d>   DW_AT_decl_file   : 1
    <44e>   DW_AT_decl_line   : 279
    <450>   DW_AT_decl_column : 13
    <451>   DW_AT_prototyped  : 1
    <451>   DW_AT_low_pc      : 0x462
    <455>   DW_AT_high_pc     : 0x6
    <459>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <45b>   DW_AT_GNU_all_call_sites: 1
 <1><45b>: Abbrev Number: 13 (DW_TAG_subprogram)
    <45c>   DW_AT_name        : (indirect string, offset: 0x296): NmiSR
    <460>   DW_AT_decl_file   : 1
    <461>   DW_AT_decl_line   : 264
    <463>   DW_AT_decl_column : 13
    <464>   DW_AT_prototyped  : 1
    <464>   DW_AT_low_pc      : 0x45c
    <468>   DW_AT_high_pc     : 0x6
    <46c>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <46e>   DW_AT_GNU_all_call_sites: 1
 <1><46e>: Abbrev Number: 14 (DW_TAG_subprogram)
    <46f>   DW_AT_external    : 1
    <46f>   DW_AT_name        : (indirect string, offset: 0x233): ResetISR
    <473>   DW_AT_decl_file   : 1
    <474>   DW_AT_decl_line   : 227
    <475>   DW_AT_decl_column : 6
    <476>   DW_AT_prototyped  : 1
    <476>   DW_AT_low_pc      : 0x400
    <47a>   DW_AT_high_pc     : 0x54
    <47e>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <480>   DW_AT_GNU_all_tail_call_sites: 1
    <480>   DW_AT_sibling     : <0x4a3>
 <2><484>: Abbrev Number: 6 (DW_TAG_variable)
    <485>   DW_AT_name        : (indirect string, offset: 0x289): pulSrc
    <489>   DW_AT_decl_file   : 1
    <48a>   DW_AT_decl_line   : 228
    <48b>   DW_AT_decl_column : 18
    <48c>   DW_AT_type        : <0x4a3>
    <490>   DW_AT_location    : 2 byte block: 91 74 	(DW_OP_fbreg: -12)
 <2><493>: Abbrev Number: 6 (DW_TAG_variable)
    <494>   DW_AT_name        : (indirect string, offset: 0x243): pulDest
    <498>   DW_AT_decl_file   : 1
    <499>   DW_AT_decl_line   : 228
    <49a>   DW_AT_decl_column : 27
    <49b>   DW_AT_type        : <0x4a3>
    <49f>   DW_AT_location    : 2 byte block: 91 70 	(DW_OP_fbreg: -16)
 <2><4a2>: Abbrev Number: 0
 <1><4a3>: Abbrev Number: 8 (DW_TAG_pointer_type)
    <4a4>   DW_AT_byte_size   : 4
    <4a5>   DW_AT_type        : <0x35b>
 <1><4a9>: Abbrev Number: 0
  Compilation Unit @ offset 0x4aa:
   Length:        0x228 (32-bit)
   Version:       4
   Abbrev Offset: 0x29a
   Pointer Size:  4
 <0><4b5>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <4b6>   DW_AT_producer    : (indirect string, offset: 0x7e): GNU C99 9.3.1 20200408 (release) -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=softfp -march=armv7e-m+fp -g -Os -O0 -std=c99 -ffunction-sections -fdata-sections
    <4ba>   DW_AT_language    : 12	(ANSI C99)
    <4bb>   DW_AT_name        : (indirect string, offset: 0x2e7): uart0.c
    <4bf>   DW_AT_comp_dir    : (indirect string, offset: 0x12f): /home/balder/Documents/uni/lectures/Semester 4/semesterproj/microcontroller
    <4c3>   DW_AT_ranges      : 0x88
    <4c7>   DW_AT_low_pc      : 0x0
    <4cb>   DW_AT_stmt_list   : 0x467
 <1><4cf>: Abbrev Number: 2 (DW_TAG_base_type)
    <4d0>   DW_AT_byte_size   : 1
    <4d1>   DW_AT_encoding    : 6	(signed char)
    <4d2>   DW_AT_name        : (indirect string, offset: 0x1e): signed char
 <1><4d6>: Abbrev Number: 2 (DW_TAG_base_type)
    <4d7>   DW_AT_byte_size   : 1
    <4d8>   DW_AT_encoding    : 8	(unsigned char)
    <4d9>   DW_AT_name        : (indirect string, offset: 0x1c): unsigned char
 <1><4dd>: Abbrev Number: 2 (DW_TAG_base_type)
    <4de>   DW_AT_byte_size   : 2
    <4df>   DW_AT_encoding    : 5	(signed)
    <4e0>   DW_AT_name        : (indirect string, offset: 0x4f): short int
 <1><4e4>: Abbrev Number: 2 (DW_TAG_base_type)
    <4e5>   DW_AT_byte_size   : 2
    <4e6>   DW_AT_encoding    : 7	(unsigned)
    <4e7>   DW_AT_name        : (indirect string, offset: 0x2a): short unsigned int
 <1><4eb>: Abbrev Number: 2 (DW_TAG_base_type)
    <4ec>   DW_AT_byte_size   : 4
    <4ed>   DW_AT_encoding    : 5	(signed)
    <4ee>   DW_AT_name        : (indirect string, offset: 0x75): long int
 <1><4f2>: Abbrev Number: 3 (DW_TAG_typedef)
    <4f3>   DW_AT_name        : (indirect string, offset: 0x3d): __uint32_t
    <4f7>   DW_AT_decl_file   : 2
    <4f8>   DW_AT_decl_line   : 79
    <4f9>   DW_AT_decl_column : 25
    <4fa>   DW_AT_type        : <0x4fe>
 <1><4fe>: Abbrev Number: 2 (DW_TAG_base_type)
    <4ff>   DW_AT_byte_size   : 4
    <500>   DW_AT_encoding    : 7	(unsigned)
    <501>   DW_AT_name        : (indirect string, offset: 0x5e): long unsigned int
 <1><505>: Abbrev Number: 2 (DW_TAG_base_type)
    <506>   DW_AT_byte_size   : 8
    <507>   DW_AT_encoding    : 5	(signed)
    <508>   DW_AT_name        : (indirect string, offset: 0x70): long long int
 <1><50c>: Abbrev Number: 2 (DW_TAG_base_type)
    <50d>   DW_AT_byte_size   : 8
    <50e>   DW_AT_encoding    : 7	(unsigned)
    <50f>   DW_AT_name        : (indirect string, offset: 0x59): long long unsigned int
 <1><513>: Abbrev Number: 4 (DW_TAG_base_type)
    <514>   DW_AT_byte_size   : 4
    <515>   DW_AT_encoding    : 5	(signed)
    <516>   DW_AT_name        : int
 <1><51a>: Abbrev Number: 2 (DW_TAG_base_type)
    <51b>   DW_AT_byte_size   : 4
    <51c>   DW_AT_encoding    : 7	(unsigned)
    <51d>   DW_AT_name        : (indirect string, offset: 0x63): unsigned int
 <1><521>: Abbrev Number: 3 (DW_TAG_typedef)
    <522>   DW_AT_name        : (indirect string, offset: 0x3f): uint32_t
    <526>   DW_AT_decl_file   : 3
    <527>   DW_AT_decl_line   : 48
    <528>   DW_AT_decl_column : 20
    <529>   DW_AT_type        : <0x4f2>
 <1><52d>: Abbrev Number: 3 (DW_TAG_typedef)
    <52e>   DW_AT_name        : (indirect string, offset: 0x2ef): BOOLEAN
    <532>   DW_AT_decl_file   : 4
    <533>   DW_AT_decl_line   : 21
    <534>   DW_AT_decl_column : 23
    <535>   DW_AT_type        : <0x4d6>
 <1><539>: Abbrev Number: 3 (DW_TAG_typedef)
    <53a>   DW_AT_name        : (indirect string, offset: 0x328): INT8U
    <53e>   DW_AT_decl_file   : 4
    <53f>   DW_AT_decl_line   : 22
    <540>   DW_AT_decl_column : 23
    <541>   DW_AT_type        : <0x4d6>
 <1><545>: Abbrev Number: 3 (DW_TAG_typedef)
    <546>   DW_AT_name        : (indirect string, offset: 0x346): INT32U
    <54a>   DW_AT_decl_file   : 4
    <54b>   DW_AT_decl_line   : 26
    <54c>   DW_AT_decl_column : 23
    <54d>   DW_AT_type        : <0x4fe>
 <1><551>: Abbrev Number: 2 (DW_TAG_base_type)
    <552>   DW_AT_byte_size   : 4
    <553>   DW_AT_encoding    : 4	(float)
    <554>   DW_AT_name        : (indirect string, offset: 0x16): float
 <1><558>: Abbrev Number: 2 (DW_TAG_base_type)
    <559>   DW_AT_byte_size   : 8
    <55a>   DW_AT_encoding    : 4	(float)
    <55b>   DW_AT_name        : (indirect string, offset: 0x48): double
 <1><55f>: Abbrev Number: 5 (DW_TAG_subprogram)
    <560>   DW_AT_external    : 1
    <560>   DW_AT_name        : (indirect string, offset: 0x32e): uart0_init
    <564>   DW_AT_decl_file   : 1
    <565>   DW_AT_decl_line   : 156
    <566>   DW_AT_decl_column : 13
    <567>   DW_AT_prototyped  : 1
    <567>   DW_AT_low_pc      : 0x578
    <56b>   DW_AT_high_pc     : 0xf8
    <56f>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <571>   DW_AT_GNU_all_tail_call_sites: 1
    <571>   DW_AT_sibling     : <0x5c1>
 <2><575>: Abbrev Number: 6 (DW_TAG_formal_parameter)
    <576>   DW_AT_name        : (indirect string, offset: 0x2f7): baud_rate
    <57a>   DW_AT_decl_file   : 1
    <57b>   DW_AT_decl_line   : 156
    <57c>   DW_AT_decl_column : 32
    <57d>   DW_AT_type        : <0x545>
    <581>   DW_AT_location    : 2 byte block: 91 64 	(DW_OP_fbreg: -28)
 <2><584>: Abbrev Number: 6 (DW_TAG_formal_parameter)
    <585>   DW_AT_name        : (indirect string, offset: 0x369): databits
    <589>   DW_AT_decl_file   : 1
    <58a>   DW_AT_decl_line   : 156
    <58b>   DW_AT_decl_column : 49
    <58c>   DW_AT_type        : <0x539>
    <590>   DW_AT_location    : 2 byte block: 91 63 	(DW_OP_fbreg: -29)
 <2><593>: Abbrev Number: 6 (DW_TAG_formal_parameter)
    <594>   DW_AT_name        : (indirect string, offset: 0x2c6): stopbits
    <598>   DW_AT_decl_file   : 1
    <599>   DW_AT_decl_line   : 156
    <59a>   DW_AT_decl_column : 65
    <59b>   DW_AT_type        : <0x539>
    <59f>   DW_AT_location    : 2 byte block: 91 62 	(DW_OP_fbreg: -30)
 <2><5a2>: Abbrev Number: 6 (DW_TAG_formal_parameter)
    <5a3>   DW_AT_name        : (indirect string, offset: 0x35d): parity
    <5a7>   DW_AT_decl_file   : 1
    <5a8>   DW_AT_decl_line   : 156
    <5a9>   DW_AT_decl_column : 81
    <5aa>   DW_AT_type        : <0x539>
    <5ae>   DW_AT_location    : 2 byte block: 91 61 	(DW_OP_fbreg: -31)
 <2><5b1>: Abbrev Number: 7 (DW_TAG_variable)
    <5b2>   DW_AT_name        : BRD
    <5b6>   DW_AT_decl_file   : 1
    <5b7>   DW_AT_decl_line   : 161
    <5b8>   DW_AT_decl_column : 10
    <5b9>   DW_AT_type        : <0x545>
    <5bd>   DW_AT_location    : 2 byte block: 91 6c 	(DW_OP_fbreg: -20)
 <2><5c0>: Abbrev Number: 0
 <1><5c1>: Abbrev Number: 8 (DW_TAG_subprogram)
    <5c2>   DW_AT_external    : 1
    <5c2>   DW_AT_name        : (indirect string, offset: 0x2dc): uart0_putc
    <5c6>   DW_AT_decl_file   : 1
    <5c7>   DW_AT_decl_line   : 148
    <5c8>   DW_AT_decl_column : 13
    <5c9>   DW_AT_prototyped  : 1
    <5c9>   DW_AT_low_pc      : 0x558
    <5cd>   DW_AT_high_pc     : 0x20
    <5d1>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <5d3>   DW_AT_GNU_all_call_sites: 1
    <5d3>   DW_AT_sibling     : <0x5e6>
 <2><5d7>: Abbrev Number: 9 (DW_TAG_formal_parameter)
    <5d8>   DW_AT_name        : ch
    <5db>   DW_AT_decl_file   : 1
    <5dc>   DW_AT_decl_line   : 148
    <5dd>   DW_AT_decl_column : 31
    <5de>   DW_AT_type        : <0x539>
    <5e2>   DW_AT_location    : 2 byte block: 91 77 	(DW_OP_fbreg: -9)
 <2><5e5>: Abbrev Number: 0
 <1><5e6>: Abbrev Number: 10 (DW_TAG_subprogram)
    <5e7>   DW_AT_external    : 1
    <5e7>   DW_AT_name        : (indirect string, offset: 0x339): uart0_tx_rdy
    <5eb>   DW_AT_decl_file   : 1
    <5ec>   DW_AT_decl_line   : 140
    <5ed>   DW_AT_decl_column : 16
    <5ee>   DW_AT_type        : <0x52d>
    <5f2>   DW_AT_low_pc      : 0x538
    <5f6>   DW_AT_high_pc     : 0x20
    <5fa>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <5fc>   DW_AT_GNU_all_call_sites: 1
 <1><5fc>: Abbrev Number: 10 (DW_TAG_subprogram)
    <5fd>   DW_AT_external    : 1
    <5fd>   DW_AT_name        : (indirect string, offset: 0x34d): uart0_getc
    <601>   DW_AT_decl_file   : 1
    <602>   DW_AT_decl_line   : 132
    <603>   DW_AT_decl_column : 14
    <604>   DW_AT_type        : <0x539>
    <608>   DW_AT_low_pc      : 0x0
    <60c>   DW_AT_high_pc     : 0x18
    <610>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <612>   DW_AT_GNU_all_call_sites: 1
 <1><612>: Abbrev Number: 10 (DW_TAG_subprogram)
    <613>   DW_AT_external    : 1
    <613>   DW_AT_name        : (indirect string, offset: 0x2cf): uart0_rx_rdy
    <617>   DW_AT_decl_file   : 1
    <618>   DW_AT_decl_line   : 124
    <619>   DW_AT_decl_column : 16
    <61a>   DW_AT_type        : <0x52d>
    <61e>   DW_AT_low_pc      : 0x0
    <622>   DW_AT_high_pc     : 0x20
    <626>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <628>   DW_AT_GNU_all_call_sites: 1
 <1><628>: Abbrev Number: 11 (DW_TAG_subprogram)
    <629>   DW_AT_external    : 1
    <629>   DW_AT_name        : (indirect string, offset: 0x301): uart0_fifos_disable
    <62d>   DW_AT_decl_file   : 1
    <62e>   DW_AT_decl_line   : 113
    <62f>   DW_AT_decl_column : 6
    <630>   DW_AT_low_pc      : 0x518
    <634>   DW_AT_high_pc     : 0x20
    <638>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <63a>   DW_AT_GNU_all_call_sites: 1
 <1><63a>: Abbrev Number: 11 (DW_TAG_subprogram)
    <63b>   DW_AT_external    : 1
    <63b>   DW_AT_name        : (indirect string, offset: 0x315): uart0_fifos_enable
    <63f>   DW_AT_decl_file   : 1
    <640>   DW_AT_decl_line   : 103
    <641>   DW_AT_decl_column : 6
    <642>   DW_AT_low_pc      : 0x0
    <646>   DW_AT_high_pc     : 0x20
    <64a>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <64c>   DW_AT_GNU_all_call_sites: 1
 <1><64c>: Abbrev Number: 12 (DW_TAG_subprogram)
    <64d>   DW_AT_external    : 1
    <64d>   DW_AT_name        : (indirect string, offset: 0x358): lcrh_parity
    <651>   DW_AT_decl_file   : 1
    <652>   DW_AT_decl_line   : 67
    <653>   DW_AT_decl_column : 8
    <654>   DW_AT_prototyped  : 1
    <654>   DW_AT_type        : <0x545>
    <658>   DW_AT_low_pc      : 0x4c8
    <65c>   DW_AT_high_pc     : 0x50
    <660>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <662>   DW_AT_GNU_all_call_sites: 1
    <662>   DW_AT_sibling     : <0x685>
 <2><666>: Abbrev Number: 6 (DW_TAG_formal_parameter)
    <667>   DW_AT_name        : (indirect string, offset: 0x35d): parity
    <66b>   DW_AT_decl_file   : 1
    <66c>   DW_AT_decl_line   : 67
    <66d>   DW_AT_decl_column : 27
    <66e>   DW_AT_type        : <0x539>
    <672>   DW_AT_location    : 2 byte block: 91 6f 	(DW_OP_fbreg: -17)
 <2><675>: Abbrev Number: 13 (DW_TAG_variable)
    <676>   DW_AT_name        : (indirect string, offset: 0x29c): result
    <67a>   DW_AT_decl_file   : 1
    <67b>   DW_AT_decl_line   : 80
    <67c>   DW_AT_decl_column : 10
    <67d>   DW_AT_type        : <0x545>
    <681>   DW_AT_location    : 2 byte block: 91 74 	(DW_OP_fbreg: -12)
 <2><684>: Abbrev Number: 0
 <1><685>: Abbrev Number: 12 (DW_TAG_subprogram)
    <686>   DW_AT_external    : 1
    <686>   DW_AT_name        : (indirect string, offset: 0x2c1): lcrh_stopbits
    <68a>   DW_AT_decl_file   : 1
    <68b>   DW_AT_decl_line   : 51
    <68c>   DW_AT_decl_column : 8
    <68d>   DW_AT_prototyped  : 1
    <68d>   DW_AT_type        : <0x545>
    <691>   DW_AT_low_pc      : 0x4a6
    <695>   DW_AT_high_pc     : 0x22
    <699>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <69b>   DW_AT_GNU_all_call_sites: 1
    <69b>   DW_AT_sibling     : <0x6af>
 <2><69f>: Abbrev Number: 6 (DW_TAG_formal_parameter)
    <6a0>   DW_AT_name        : (indirect string, offset: 0x2a3): antal_stopbits
    <6a4>   DW_AT_decl_file   : 1
    <6a5>   DW_AT_decl_line   : 51
    <6a6>   DW_AT_decl_column : 29
    <6a7>   DW_AT_type        : <0x539>
    <6ab>   DW_AT_location    : 2 byte block: 91 77 	(DW_OP_fbreg: -9)
 <2><6ae>: Abbrev Number: 0
 <1><6af>: Abbrev Number: 14 (DW_TAG_subprogram)
    <6b0>   DW_AT_external    : 1
    <6b0>   DW_AT_name        : (indirect string, offset: 0x364): lcrh_databits
    <6b4>   DW_AT_decl_file   : 1
    <6b5>   DW_AT_decl_line   : 34
    <6b6>   DW_AT_decl_column : 8
    <6b7>   DW_AT_prototyped  : 1
    <6b7>   DW_AT_type        : <0x545>
    <6bb>   DW_AT_low_pc      : 0x47a
    <6bf>   DW_AT_high_pc     : 0x2c
    <6c3>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <6c5>   DW_AT_GNU_all_call_sites: 1
 <2><6c5>: Abbrev Number: 6 (DW_TAG_formal_parameter)
    <6c6>   DW_AT_name        : (indirect string, offset: 0x2b2): antal_databits
    <6ca>   DW_AT_decl_file   : 1
    <6cb>   DW_AT_decl_line   : 34
    <6cc>   DW_AT_decl_column : 29
    <6cd>   DW_AT_type        : <0x539>
    <6d1>   DW_AT_location    : 2 byte block: 91 77 	(DW_OP_fbreg: -9)
 <2><6d4>: Abbrev Number: 0
 <1><6d5>: Abbrev Number: 0
  Compilation Unit @ offset 0x6d6:
   Length:        0x16c (32-bit)
   Version:       4
   Abbrev Offset: 0x3bb
   Pointer Size:  4
 <0><6e1>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <6e2>   DW_AT_producer    : (indirect string, offset: 0x7e): GNU C99 9.3.1 20200408 (release) -mthumb -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=softfp -march=armv7e-m+fp -g -Os -O0 -std=c99 -ffunction-sections -fdata-sections
    <6e6>   DW_AT_language    : 12	(ANSI C99)
    <6e7>   DW_AT_name        : (indirect string, offset: 0x3a3): uart.c
    <6eb>   DW_AT_comp_dir    : (indirect string, offset: 0x12f): /home/balder/Documents/uni/lectures/Semester 4/semesterproj/microcontroller
    <6ef>   DW_AT_ranges      : 0xe0
    <6f3>   DW_AT_low_pc      : 0x0
    <6f7>   DW_AT_stmt_list   : 0x6e1
 <1><6fb>: Abbrev Number: 2 (DW_TAG_base_type)
    <6fc>   DW_AT_byte_size   : 1
    <6fd>   DW_AT_encoding    : 8	(unsigned char)
    <6fe>   DW_AT_name        : (indirect string, offset: 0x1c): unsigned char
 <1><702>: Abbrev Number: 2 (DW_TAG_base_type)
    <703>   DW_AT_byte_size   : 1
    <704>   DW_AT_encoding    : 6	(signed char)
    <705>   DW_AT_name        : (indirect string, offset: 0x1e): signed char
 <1><709>: Abbrev Number: 2 (DW_TAG_base_type)
    <70a>   DW_AT_byte_size   : 2
    <70b>   DW_AT_encoding    : 7	(unsigned)
    <70c>   DW_AT_name        : (indirect string, offset: 0x2a): short unsigned int
 <1><710>: Abbrev Number: 2 (DW_TAG_base_type)
    <711>   DW_AT_byte_size   : 2
    <712>   DW_AT_encoding    : 5	(signed)
    <713>   DW_AT_name        : (indirect string, offset: 0x4f): short int
 <1><717>: Abbrev Number: 2 (DW_TAG_base_type)
    <718>   DW_AT_byte_size   : 4
    <719>   DW_AT_encoding    : 7	(unsigned)
    <71a>   DW_AT_name        : (indirect string, offset: 0x5e): long unsigned int
 <1><71e>: Abbrev Number: 2 (DW_TAG_base_type)
    <71f>   DW_AT_byte_size   : 4
    <720>   DW_AT_encoding    : 5	(signed)
    <721>   DW_AT_name        : (indirect string, offset: 0x75): long int
 <1><725>: Abbrev Number: 2 (DW_TAG_base_type)
    <726>   DW_AT_byte_size   : 8
    <727>   DW_AT_encoding    : 7	(unsigned)
    <728>   DW_AT_name        : (indirect string, offset: 0x59): long long unsigned int
 <1><72c>: Abbrev Number: 2 (DW_TAG_base_type)
    <72d>   DW_AT_byte_size   : 8
    <72e>   DW_AT_encoding    : 5	(signed)
    <72f>   DW_AT_name        : (indirect string, offset: 0x70): long long int
 <1><733>: Abbrev Number: 2 (DW_TAG_base_type)
    <734>   DW_AT_byte_size   : 4
    <735>   DW_AT_encoding    : 4	(float)
    <736>   DW_AT_name        : (indirect string, offset: 0x16): float
 <1><73a>: Abbrev Number: 2 (DW_TAG_base_type)
    <73b>   DW_AT_byte_size   : 8
    <73c>   DW_AT_encoding    : 4	(float)
    <73d>   DW_AT_name        : (indirect string, offset: 0x48): double
 <1><741>: Abbrev Number: 3 (DW_TAG_subprogram)
    <742>   DW_AT_external    : 1
    <742>   DW_AT_name        : (indirect string, offset: 0x3da): uart_put_stringln
    <746>   DW_AT_decl_file   : 1
    <747>   DW_AT_decl_line   : 38
    <748>   DW_AT_decl_column : 6
    <749>   DW_AT_prototyped  : 1
    <749>   DW_AT_low_pc      : 0x6d6
    <74d>   DW_AT_high_pc     : 0x1c
    <751>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <753>   DW_AT_GNU_all_tail_call_sites: 1
    <753>   DW_AT_sibling     : <0x767>
 <2><757>: Abbrev Number: 4 (DW_TAG_formal_parameter)
    <758>   DW_AT_name        : str
    <75c>   DW_AT_decl_file   : 1
    <75d>   DW_AT_decl_line   : 38
    <75e>   DW_AT_decl_column : 30
    <75f>   DW_AT_type        : <0x767>
    <763>   DW_AT_location    : 2 byte block: 91 74 	(DW_OP_fbreg: -12)
 <2><766>: Abbrev Number: 0
 <1><767>: Abbrev Number: 5 (DW_TAG_pointer_type)
    <768>   DW_AT_byte_size   : 4
    <769>   DW_AT_type        : <0x76d>
 <1><76d>: Abbrev Number: 2 (DW_TAG_base_type)
    <76e>   DW_AT_byte_size   : 1
    <76f>   DW_AT_encoding    : 8	(unsigned char)
    <770>   DW_AT_name        : (indirect string, offset: 0x25): char
 <1><774>: Abbrev Number: 3 (DW_TAG_subprogram)
    <775>   DW_AT_external    : 1
    <775>   DW_AT_name        : (indirect string, offset: 0x372): uart_put_string
    <779>   DW_AT_decl_file   : 1
    <77a>   DW_AT_decl_line   : 34
    <77b>   DW_AT_decl_column : 6
    <77c>   DW_AT_prototyped  : 1
    <77c>   DW_AT_low_pc      : 0x6ac
    <780>   DW_AT_high_pc     : 0x2a
    <784>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <786>   DW_AT_GNU_all_tail_call_sites: 1
    <786>   DW_AT_sibling     : <0x79a>
 <2><78a>: Abbrev Number: 4 (DW_TAG_formal_parameter)
    <78b>   DW_AT_name        : str
    <78f>   DW_AT_decl_file   : 1
    <790>   DW_AT_decl_line   : 34
    <791>   DW_AT_decl_column : 28
    <792>   DW_AT_type        : <0x767>
    <796>   DW_AT_location    : 2 byte block: 91 74 	(DW_OP_fbreg: -12)
 <2><799>: Abbrev Number: 0
 <1><79a>: Abbrev Number: 6 (DW_TAG_subprogram)
    <79b>   DW_AT_external    : 1
    <79b>   DW_AT_name        : (indirect string, offset: 0x3c9): uart_init
    <79f>   DW_AT_decl_file   : 1
    <7a0>   DW_AT_decl_line   : 30
    <7a1>   DW_AT_decl_column : 6
    <7a2>   DW_AT_low_pc      : 0x696
    <7a6>   DW_AT_high_pc     : 0x16
    <7aa>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <7ac>   DW_AT_GNU_all_tail_call_sites: 1
 <1><7ac>: Abbrev Number: 7 (DW_TAG_subprogram)
    <7ad>   DW_AT_external    : 1
    <7ad>   DW_AT_name        : (indirect string, offset: 0x3aa): uart_get_string
    <7b1>   DW_AT_decl_file   : 1
    <7b2>   DW_AT_decl_line   : 13
    <7b3>   DW_AT_decl_column : 8
    <7b4>   DW_AT_type        : <0x767>
    <7b8>   DW_AT_low_pc      : 0x0
    <7bc>   DW_AT_high_pc     : 0x48
    <7c0>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <7c2>   DW_AT_GNU_all_tail_call_sites: 1
    <7c2>   DW_AT_sibling     : <0x7f7>
 <2><7c6>: Abbrev Number: 8 (DW_TAG_variable)
    <7c7>   DW_AT_name        : (indirect string, offset: 0x3d3): buffer
    <7cb>   DW_AT_decl_file   : 1
    <7cc>   DW_AT_decl_line   : 14
    <7cd>   DW_AT_decl_column : 17
    <7ce>   DW_AT_type        : <0x7f7>
    <7d2>   DW_AT_location    : 5 byte block: 3 0 0 0 0 	(DW_OP_addr: 0)
 <2><7d8>: Abbrev Number: 8 (DW_TAG_variable)
    <7d9>   DW_AT_name        : (indirect string, offset: 0x3ba): buffer_pointer
    <7dd>   DW_AT_decl_file   : 1
    <7de>   DW_AT_decl_line   : 15
    <7df>   DW_AT_decl_column : 11
    <7e0>   DW_AT_type        : <0x767>
    <7e4>   DW_AT_location    : 2 byte block: 91 74 	(DW_OP_fbreg: -12)
 <2><7e7>: Abbrev Number: 8 (DW_TAG_variable)
    <7e8>   DW_AT_name        : (indirect string, offset: 0x396): current_char
    <7ec>   DW_AT_decl_file   : 1
    <7ed>   DW_AT_decl_line   : 17
    <7ee>   DW_AT_decl_column : 10
    <7ef>   DW_AT_type        : <0x76d>
    <7f3>   DW_AT_location    : 2 byte block: 91 73 	(DW_OP_fbreg: -13)
 <2><7f6>: Abbrev Number: 0
 <1><7f7>: Abbrev Number: 9 (DW_TAG_array_type)
    <7f8>   DW_AT_type        : <0x76d>
    <7fc>   DW_AT_sibling     : <0x807>
 <2><800>: Abbrev Number: 10 (DW_TAG_subrange_type)
    <801>   DW_AT_type        : <0x807>
    <805>   DW_AT_upper_bound : 255
 <2><806>: Abbrev Number: 0
 <1><807>: Abbrev Number: 2 (DW_TAG_base_type)
    <808>   DW_AT_byte_size   : 4
    <809>   DW_AT_encoding    : 7	(unsigned)
    <80a>   DW_AT_name        : (indirect string, offset: 0x63): unsigned int
 <1><80e>: Abbrev Number: 11 (DW_TAG_subprogram)
    <80f>   DW_AT_external    : 1
    <80f>   DW_AT_name        : (indirect string, offset: 0x38c): uart_getc
    <813>   DW_AT_decl_file   : 1
    <814>   DW_AT_decl_line   : 8
    <815>   DW_AT_decl_column : 6
    <816>   DW_AT_type        : <0x76d>
    <81a>   DW_AT_low_pc      : 0x0
    <81e>   DW_AT_high_pc     : 0x1a
    <822>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <824>   DW_AT_GNU_all_tail_call_sites: 1
 <1><824>: Abbrev Number: 12 (DW_TAG_subprogram)
    <825>   DW_AT_external    : 1
    <825>   DW_AT_name        : (indirect string, offset: 0x382): uart_putc
    <829>   DW_AT_decl_file   : 1
    <82a>   DW_AT_decl_line   : 3
    <82b>   DW_AT_decl_column : 6
    <82c>   DW_AT_prototyped  : 1
    <82c>   DW_AT_low_pc      : 0x670
    <830>   DW_AT_high_pc     : 0x26
    <834>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <836>   DW_AT_GNU_all_tail_call_sites: 1
 <2><836>: Abbrev Number: 4 (DW_TAG_formal_parameter)
    <837>   DW_AT_name        : ch
    <83a>   DW_AT_decl_file   : 1
    <83b>   DW_AT_decl_line   : 3
    <83c>   DW_AT_decl_column : 21
    <83d>   DW_AT_type        : <0x76d>
    <841>   DW_AT_location    : 2 byte block: 91 77 	(DW_OP_fbreg: -9)
 <2><844>: Abbrev Number: 0
 <1><845>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0x0)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x53)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_enumeration_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_encoding     DW_FORM_data1
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_enumerator    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_const_value  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_enumerator    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_const_value  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x112)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_enumeration_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_encoding     DW_FORM_data1
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_enumerator    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_const_value  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_enumerator    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_const_value  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_lexical_block    [has children]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x1c2)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_subroutine_type    [no children]
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_subprogram    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x29a)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
  Number TAG (0x3bb)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0

Contents of the .debug_aranges section:

  Length:                   36
  Version:                  2
  Offset into .debug_info:  0x0
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    0000026c 00000018 
    00000284 00000074 
    00000000 00000000 
  Length:                   44
  Version:                  2
  Offset into .debug_info:  0xca
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    000002f8 00000090 
    00000388 00000024 
    00000000 0000001c 
    00000000 00000000 
  Length:                   36
  Version:                  2
  Offset into .debug_info:  0x1df
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    000003ac 0000001a 
    000003c8 00000038 
    00000000 00000000 
  Length:                   68
  Version:                  2
  Offset into .debug_info:  0x313
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000400 00000054 
    0000045c 00000006 
    00000462 00000006 
    00000468 00000006 
    0000046e 00000006 
    00000474 00000006 
    00000000 00000000 
  Length:                   100
  Version:                  2
  Offset into .debug_info:  0x4aa
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    0000047a 0000002c 
    000004a6 00000022 
    000004c8 00000050 
    00000000 00000020 
    00000518 00000020 
    00000000 00000020 
    00000000 00000018 
    00000538 00000020 
    00000558 00000020 
    00000578 000000f8 
    00000000 00000000 
  Length:                   68
  Version:                  2
  Offset into .debug_info:  0x6d6
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    00000670 00000026 
    00000000 0000001a 
    00000000 00000048 
    00000696 00000016 
    000006ac 0000002a 
    000006d6 0000001c 
    00000000 00000000 

Contents of the .debug_ranges section:

    Offset   Begin    End
    00000000 0000026c 00000284 
    00000000 00000284 000002f8 
    00000000 <End of list>
    00000018 000002f8 00000388 
    00000018 00000388 000003ac 
    00000018 00000001 00000001 (start == end)
    00000018 <End of list>
    00000038 000003ac 000003c6 
    00000038 000003c8 00000400 
    00000038 <End of list>
    00000050 00000400 00000454 
    00000050 0000045c 00000462 
    00000050 00000462 00000468 
    00000050 00000468 0000046e 
    00000050 0000046e 00000474 
    00000050 00000474 0000047a 
    00000050 <End of list>
    00000088 0000047a 000004a6 
    00000088 000004a6 000004c8 
    00000088 000004c8 00000518 
    00000088 00000001 00000001 (start == end)
    00000088 00000518 00000538 
    00000088 00000001 00000001 (start == end)
    00000088 00000001 00000001 (start == end)
    00000088 00000538 00000558 
    00000088 00000558 00000578 
    00000088 00000578 00000670 
    00000088 <End of list>
    000000e0 00000670 00000696 
    000000e0 00000001 00000001 (start == end)
    000000e0 00000001 00000001 (start == end)
    000000e0 00000696 000006ac 
    000000e0 000006ac 000006d6 
    000000e0 000006d6 000006f2 
    000000e0 <End of list>

Raw dump of debug contents of section .debug_line:

  Offset:                      0x0
  Length:                      349
  DWARF Version:               3
  Prologue Length:             265
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x1b):
  1	/nix/store/i8p069hg9yhdqp764gaqs22wga33xnyl-gcc-arm-embedded-9.3.1/arm-none-eabi/include/machine
  2	/nix/store/i8p069hg9yhdqp764gaqs22wga33xnyl-gcc-arm-embedded-9.3.1/arm-none-eabi/include/sys

 The File Name Table (offset 0xda):
  Entry	Dir	Time	Size	Name
  1	0	0	0	adc.c
  2	1	0	0	_default_types.h
  3	2	0	0	_stdint.h
  4	0	0	0	emp_type.h

 Line Number Statements:
  [0x00000113]  Set column to 1
  [0x00000115]  Extended opcode 2: set Address to 0x26c
  [0x0000011c]  Special opcode 13: advance Address by 0 to 0x26c and Line by 8 to 9
  [0x0000011d]  Set column to 11
  [0x0000011f]  Special opcode 34: advance Address by 4 to 0x270 and Line by 1 to 10
  [0x00000120]  Set column to 1
  [0x00000122]  Special opcode 48: advance Address by 6 to 0x276 and Line by 1 to 11
  [0x00000123]  Advance PC by 14 to 0x284
  [0x00000125]  Extended opcode 1: End of Sequence

  [0x00000128]  Set column to 1
  [0x0000012a]  Extended opcode 2: set Address to 0x284
  [0x00000131]  Advance Line by 13 to 14
  [0x00000133]  Copy
  [0x00000134]  Set column to 18
  [0x00000136]  Special opcode 35: advance Address by 4 to 0x288 and Line by 2 to 16
  [0x00000137]  Special opcode 91: advance Address by 12 to 0x294 and Line by 2 to 18
  [0x00000138]  Set column to 3
  [0x0000013a]  Special opcode 96: advance Address by 12 to 0x2a0 and Line by 7 to 25
  [0x0000013b]  Set column to 16
  [0x0000013d]  Special opcode 19: advance Address by 2 to 0x2a2 and Line by 0 to 25
  [0x0000013e]  Set column to 15
  [0x00000140]  Special opcode 53: advance Address by 6 to 0x2a8 and Line by 6 to 31
  [0x00000141]  Set column to 3
  [0x00000143]  Special opcode 93: advance Address by 12 to 0x2b4 and Line by 4 to 35
  [0x00000144]  Set column to 17
  [0x00000146]  Special opcode 19: advance Address by 2 to 0x2b6 and Line by 0 to 35
  [0x00000147]  Set column to 3
  [0x00000149]  Special opcode 37: advance Address by 4 to 0x2ba and Line by 4 to 39
  [0x0000014a]  Set column to 17
  [0x0000014c]  Special opcode 19: advance Address by 2 to 0x2bc and Line by 0 to 39
  [0x0000014d]  Set column to 3
  [0x0000014f]  Special opcode 37: advance Address by 4 to 0x2c0 and Line by 4 to 43
  [0x00000150]  Set column to 16
  [0x00000152]  Special opcode 19: advance Address by 2 to 0x2c2 and Line by 0 to 43
  [0x00000153]  Set column to 3
  [0x00000155]  Special opcode 37: advance Address by 4 to 0x2c6 and Line by 4 to 47
  [0x00000156]  Set column to 15
  [0x00000158]  Special opcode 19: advance Address by 2 to 0x2c8 and Line by 0 to 47
  [0x00000159]  Set column to 1
  [0x0000015b]  Special opcode 35: advance Address by 4 to 0x2cc and Line by 2 to 49
  [0x0000015c]  Advance PC by 44 to 0x2f8
  [0x0000015e]  Extended opcode 1: End of Sequence


  Offset:                      0x161
  Length:                      404
  DWARF Version:               3
  Prologue Length:             262
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x17c):
  1	/nix/store/i8p069hg9yhdqp764gaqs22wga33xnyl-gcc-arm-embedded-9.3.1/arm-none-eabi/include/machine
  2	/nix/store/i8p069hg9yhdqp764gaqs22wga33xnyl-gcc-arm-embedded-9.3.1/arm-none-eabi/include/sys

 The File Name Table (offset 0x23b):
  Entry	Dir	Time	Size	Name
  1	0	0	0	gpio.c
  2	1	0	0	_default_types.h
  3	2	0	0	_stdint.h
  4	0	0	0	gpio.h

 Line Number Statements:
  [0x00000271]  Set column to 19
  [0x00000273]  Extended opcode 2: set Address to 0x2f8
  [0x0000027a]  Special opcode 8: advance Address by 0 to 0x2f8 and Line by 3 to 4
  [0x0000027b]  Set column to 3
  [0x0000027d]  Special opcode 35: advance Address by 4 to 0x2fc and Line by 2 to 6
  [0x0000027e]  Set column to 18
  [0x00000280]  Special opcode 19: advance Address by 2 to 0x2fe and Line by 0 to 6
  [0x00000281]  Set column to 3
  [0x00000283]  Special opcode 35: advance Address by 4 to 0x302 and Line by 2 to 8
  [0x00000284]  Set column to 20
  [0x00000286]  Special opcode 19: advance Address by 2 to 0x304 and Line by 0 to 8
  [0x00000287]  Set column to 3
  [0x00000289]  Special opcode 35: advance Address by 4 to 0x308 and Line by 2 to 10
  [0x0000028a]  Set column to 20
  [0x0000028c]  Special opcode 19: advance Address by 2 to 0x30a and Line by 0 to 10
  [0x0000028d]  Set column to 3
  [0x0000028f]  Special opcode 35: advance Address by 4 to 0x30e and Line by 2 to 12
  [0x00000290]  Set column to 20
  [0x00000292]  Special opcode 19: advance Address by 2 to 0x310 and Line by 0 to 12
  [0x00000293]  Set column to 14
  [0x00000295]  Special opcode 36: advance Address by 4 to 0x314 and Line by 3 to 15
  [0x00000296]  Set column to 18
  [0x00000298]  Special opcode 90: advance Address by 12 to 0x320 and Line by 1 to 16
  [0x00000299]  Set column to 30
  [0x0000029b]  Special opcode 33: advance Address by 4 to 0x324 and Line by 0 to 16
  [0x0000029c]  Set column to 3
  [0x0000029e]  Special opcode 33: advance Address by 4 to 0x328 and Line by 0 to 16
  [0x0000029f]  Set column to 44
  [0x000002a1]  Special opcode 19: advance Address by 2 to 0x32a and Line by 0 to 16
  [0x000002a2]  Set column to 15
  [0x000002a4]  Special opcode 33: advance Address by 4 to 0x32e and Line by 0 to 16
  [0x000002a5]  Set column to 19
  [0x000002a7]  Special opcode 20: advance Address by 2 to 0x330 and Line by 1 to 17
  [0x000002a8]  Set column to 20
  [0x000002aa]  Special opcode 90: advance Address by 12 to 0x33c and Line by 1 to 18
  [0x000002ab]  Set column to 3
  [0x000002ad]  Special opcode 91: advance Address by 12 to 0x348 and Line by 2 to 20
  [0x000002ae]  Set column to 19
  [0x000002b0]  Special opcode 19: advance Address by 2 to 0x34a and Line by 0 to 20
  [0x000002b1]  Set column to 3
  [0x000002b3]  Special opcode 34: advance Address by 4 to 0x34e and Line by 1 to 21
  [0x000002b4]  Set column to 20
  [0x000002b6]  Special opcode 19: advance Address by 2 to 0x350 and Line by 0 to 21
  [0x000002b7]  Set column to 1
  [0x000002b9]  Special opcode 34: advance Address by 4 to 0x354 and Line by 1 to 22
  [0x000002ba]  Advance PC by 52 to 0x388
  [0x000002bc]  Extended opcode 1: End of Sequence

  [0x000002bf]  Set column to 39
  [0x000002c1]  Extended opcode 2: set Address to 0x388
  [0x000002c8]  Advance Line by 23 to 24
  [0x000002ca]  Copy
  [0x000002cb]  Set column to 67
  [0x000002cd]  Special opcode 75: advance Address by 10 to 0x392 and Line by 0 to 24
  [0x000002ce]  Set column to 41
  [0x000002d0]  Special opcode 33: advance Address by 4 to 0x396 and Line by 0 to 24
  [0x000002d1]  Set column to 59
  [0x000002d3]  Special opcode 19: advance Address by 2 to 0x398 and Line by 0 to 24
  [0x000002d4]  Set column to 73
  [0x000002d6]  Special opcode 19: advance Address by 2 to 0x39a and Line by 0 to 24
  [0x000002d7]  Advance PC by 18 to 0x3ac
  [0x000002d9]  Extended opcode 1: End of Sequence

  [0x000002dc]  Set column to 26
  [0x000002de]  Extended opcode 2: set Address to 0x0
  [0x000002e5]  Advance Line by 25 to 26
  [0x000002e7]  Copy
  [0x000002e8]  Set column to 37
  [0x000002ea]  Special opcode 33: advance Address by 4 to 0x4 and Line by 0 to 26
  [0x000002eb]  Set column to 35
  [0x000002ed]  Special opcode 33: advance Address by 4 to 0x8 and Line by 0 to 26
  [0x000002ee]  Set column to 56
  [0x000002f0]  Special opcode 19: advance Address by 2 to 0xa and Line by 0 to 26
  [0x000002f1]  Set column to 70
  [0x000002f3]  Special opcode 33: advance Address by 4 to 0xe and Line by 0 to 26
  [0x000002f4]  Advance PC by 14 to 0x1c
  [0x000002f6]  Extended opcode 1: End of Sequence


  Offset:                      0x2f9
  Length:                      138
  DWARF Version:               3
  Prologue Length:             53
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table is empty.

 The File Name Table (offset 0x315):
  Entry	Dir	Time	Size	Name
  1	0	0	0	main.c
  2	0	0	0	emp_type.h
  3	0	0	0	gpio.h

 Line Number Statements:
  [0x00000338]  Set column to 14
  [0x0000033a]  Extended opcode 2: set Address to 0x3ac
  [0x00000341]  Special opcode 13: advance Address by 0 to 0x3ac and Line by 8 to 9
  [0x00000342]  Set column to 5
  [0x00000344]  Special opcode 34: advance Address by 4 to 0x3b0 and Line by 1 to 10
  [0x00000345]  Special opcode 34: advance Address by 4 to 0x3b4 and Line by 1 to 11
  [0x00000346]  Special opcode 48: advance Address by 6 to 0x3ba and Line by 1 to 12
  [0x00000347]  Special opcode 34: advance Address by 4 to 0x3be and Line by 1 to 13
  [0x00000348]  Set column to 1
  [0x0000034a]  Special opcode 34: advance Address by 4 to 0x3c2 and Line by 1 to 14
  [0x0000034b]  Advance PC by 4 to 0x3c6
  [0x0000034d]  Extended opcode 1: End of Sequence

  [0x00000350]  Set column to 16
  [0x00000352]  Extended opcode 2: set Address to 0x3c8
  [0x00000359]  Advance Line by 15 to 16
  [0x0000035b]  Copy
  [0x0000035c]  Set column to 5
  [0x0000035e]  Special opcode 48: advance Address by 6 to 0x3ce and Line by 1 to 17
  [0x0000035f]  Special opcode 34: advance Address by 4 to 0x3d2 and Line by 1 to 18
  [0x00000360]  Special opcode 48: advance Address by 6 to 0x3d8 and Line by 1 to 19
  [0x00000361]  Set column to 24
  [0x00000363]  Extended opcode 4: set Discriminator to 1
  [0x00000367]  Special opcode 50: advance Address by 6 to 0x3de and Line by 3 to 22
  [0x00000368]  Set column to 14
  [0x0000036a]  Extended opcode 4: set Discriminator to 1
  [0x0000036e]  Special opcode 62: advance Address by 8 to 0x3e6 and Line by 1 to 23
  [0x0000036f]  Extended opcode 4: set Discriminator to 1
  [0x00000373]  Special opcode 62: advance Address by 8 to 0x3ee and Line by 1 to 24
  [0x00000374]  Set column to 9
  [0x00000376]  Extended opcode 4: set Discriminator to 1
  [0x0000037a]  Special opcode 34: advance Address by 4 to 0x3f2 and Line by 1 to 25
  [0x0000037b]  Set column to 16
  [0x0000037d]  Extended opcode 4: set Discriminator to 1
  [0x00000381]  Special opcode 57: advance Address by 8 to 0x3fa and Line by -4 to 21
  [0x00000382]  Advance PC by 6 to 0x400
  [0x00000384]  Extended opcode 1: End of Sequence


  Offset:                      0x387
  Length:                      220
  DWARF Version:               3
  Prologue Length:             36
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table is empty.

 The File Name Table (offset 0x3a3):
  Entry	Dir	Time	Size	Name
  1	0	0	0	startup_gcc.c

 Line Number Statements:
  [0x000003b5]  Set column to 21
  [0x000003b7]  Extended opcode 2: set Address to 0x400
  [0x000003be]  Advance Line by 226 to 227
  [0x000003c1]  Copy
  [0x000003c2]  Set column to 10
  [0x000003c4]  Special opcode 53: advance Address by 6 to 0x406 and Line by 6 to 233
  [0x000003c5]  Set column to 16
  [0x000003c7]  Special opcode 34: advance Address by 4 to 0x40a and Line by 1 to 234
  [0x000003c8]  Set column to 3
  [0x000003ca]  Special opcode 33: advance Address by 4 to 0x40e and Line by 0 to 234
  [0x000003cb]  Set column to 25
  [0x000003cd]  Special opcode 20: advance Address by 2 to 0x410 and Line by 1 to 235
  [0x000003ce]  Set column to 13
  [0x000003d0]  Special opcode 47: advance Address by 6 to 0x416 and Line by 0 to 235
  [0x000003d1]  Set column to 18
  [0x000003d3]  Special opcode 47: advance Address by 6 to 0x41c and Line by 0 to 235
  [0x000003d4]  Set column to 16
  [0x000003d6]  Special opcode 19: advance Address by 2 to 0x41e and Line by 0 to 235
  [0x000003d7]  Set column to 3
  [0x000003d9]  Extended opcode 4: set Discriminator to 1
  [0x000003dd]  Special opcode 18: advance Address by 2 to 0x420 and Line by -1 to 234
  [0x000003de]  Special opcode 68: advance Address by 8 to 0x428 and Line by 7 to 241
  [0x000003df]  Advance Line by 13 to 254
  [0x000003e1]  Special opcode 131: advance Address by 18 to 0x43a and Line by 0 to 254
  [0x000003e2]  Set column to 1
  [0x000003e4]  Special opcode 34: advance Address by 4 to 0x43e and Line by 1 to 255
  [0x000003e5]  Advance PC by 30 to 0x45c
  [0x000003e7]  Extended opcode 1: End of Sequence

  [0x000003ea]  Set column to 25
  [0x000003ec]  Extended opcode 2: set Address to 0x45c
  [0x000003f3]  Advance Line by 263 to 264
  [0x000003f6]  Copy
  [0x000003f7]  Set column to 9
  [0x000003f9]  Extended opcode 4: set Discriminator to 1
  [0x000003fd]  Special opcode 37: advance Address by 4 to 0x460 and Line by 4 to 268
  [0x000003fe]  Advance PC by 2 to 0x462
  [0x00000400]  Extended opcode 1: End of Sequence

  [0x00000403]  Set column to 28
  [0x00000405]  Extended opcode 2: set Address to 0x462
  [0x0000040c]  Advance Line by 278 to 279
  [0x0000040f]  Copy
  [0x00000410]  Set column to 9
  [0x00000412]  Extended opcode 4: set Discriminator to 1
  [0x00000416]  Special opcode 37: advance Address by 4 to 0x466 and Line by 4 to 283
  [0x00000417]  Advance PC by 2 to 0x468
  [0x00000419]  Extended opcode 1: End of Sequence

  [0x0000041c]  Set column to 37
  [0x0000041e]  Extended opcode 2: set Address to 0x468
  [0x00000425]  Advance Line by 293 to 294
  [0x00000428]  Copy
  [0x00000429]  Set column to 9
  [0x0000042b]  Extended opcode 4: set Discriminator to 1
  [0x0000042f]  Special opcode 37: advance Address by 4 to 0x46c and Line by 4 to 298
  [0x00000430]  Advance PC by 2 to 0x46e
  [0x00000432]  Extended opcode 1: End of Sequence

  [0x00000435]  Set column to 50
  [0x00000437]  Extended opcode 2: set Address to 0x46e
  [0x0000043e]  Advance Line by 307 to 308
  [0x00000441]  Copy
  [0x00000442]  Set column to 9
  [0x00000444]  Extended opcode 4: set Discriminator to 1
  [0x00000448]  Special opcode 34: advance Address by 4 to 0x472 and Line by 1 to 309
  [0x00000449]  Advance PC by 2 to 0x474
  [0x0000044b]  Extended opcode 1: End of Sequence

  [0x0000044e]  Set column to 48
  [0x00000450]  Extended opcode 2: set Address to 0x474
  [0x00000457]  Advance Line by 311 to 312
  [0x0000045a]  Copy
  [0x0000045b]  Set column to 9
  [0x0000045d]  Extended opcode 4: set Discriminator to 1
  [0x00000461]  Special opcode 34: advance Address by 4 to 0x478 and Line by 1 to 313
  [0x00000462]  Advance PC by 2 to 0x47a
  [0x00000464]  Extended opcode 1: End of Sequence


  Offset:                      0x467
  Length:                      630
  DWARF Version:               3
  Prologue Length:             267
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x482):
  1	/nix/store/i8p069hg9yhdqp764gaqs22wga33xnyl-gcc-arm-embedded-9.3.1/arm-none-eabi/include/machine
  2	/nix/store/i8p069hg9yhdqp764gaqs22wga33xnyl-gcc-arm-embedded-9.3.1/arm-none-eabi/include/sys

 The File Name Table (offset 0x541):
  Entry	Dir	Time	Size	Name
  1	0	0	0	uart0.c
  2	1	0	0	_default_types.h
  3	2	0	0	_stdint.h
  4	0	0	0	emp_type.h

 Line Number Statements:
  [0x0000057c]  Set column to 1
  [0x0000057e]  Extended opcode 2: set Address to 0x47a
  [0x00000585]  Advance Line by 44 to 45
  [0x00000587]  Copy
  [0x00000588]  Set column to 5
  [0x0000058a]  Special opcode 76: advance Address by 10 to 0x484 and Line by 1 to 46
  [0x0000058b]  Set column to 29
  [0x0000058d]  Extended opcode 4: set Discriminator to 1
  [0x00000591]  Special opcode 47: advance Address by 6 to 0x48a and Line by 0 to 46
  [0x00000592]  Set column to 17
  [0x00000594]  Special opcode 48: advance Address by 6 to 0x490 and Line by 1 to 47
  [0x00000595]  Set column to 12
  [0x00000597]  Special opcode 34: advance Address by 4 to 0x494 and Line by 1 to 48
  [0x00000598]  Set column to 35
  [0x0000059a]  Special opcode 19: advance Address by 2 to 0x496 and Line by 0 to 48
  [0x0000059b]  Set column to 41
  [0x0000059d]  Special opcode 19: advance Address by 2 to 0x498 and Line by 0 to 48
  [0x0000059e]  Set column to 1
  [0x000005a0]  Special opcode 20: advance Address by 2 to 0x49a and Line by 1 to 49
  [0x000005a1]  Advance PC by 12 to 0x4a6
  [0x000005a3]  Extended opcode 1: End of Sequence

  [0x000005a6]  Set column to 1
  [0x000005a8]  Extended opcode 2: set Address to 0x4a6
  [0x000005af]  Advance Line by 59 to 60
  [0x000005b1]  Copy
  [0x000005b2]  Set column to 5
  [0x000005b4]  Special opcode 76: advance Address by 10 to 0x4b0 and Line by 1 to 61
  [0x000005b5]  Set column to 11
  [0x000005b7]  Special opcode 48: advance Address by 6 to 0x4b6 and Line by 1 to 62
  [0x000005b8]  Set column to 8
  [0x000005ba]  Special opcode 35: advance Address by 4 to 0x4ba and Line by 2 to 64
  [0x000005bb]  Set column to 1
  [0x000005bd]  Special opcode 20: advance Address by 2 to 0x4bc and Line by 1 to 65
  [0x000005be]  Advance PC by 12 to 0x4c8
  [0x000005c0]  Extended opcode 1: End of Sequence

  [0x000005c3]  Set column to 1
  [0x000005c5]  Extended opcode 2: set Address to 0x4c8
  [0x000005cc]  Advance Line by 78 to 79
  [0x000005cf]  Copy
  [0x000005d0]  Set column to 3
  [0x000005d2]  Special opcode 78: advance Address by 10 to 0x4d2 and Line by 3 to 82
  [0x000005d3]  Set column to 14
  [0x000005d5]  Special opcode 204: advance Address by 28 to 0x4ee and Line by 3 to 85
  [0x000005d6]  Set column to 7
  [0x000005d8]  Special opcode 34: advance Address by 4 to 0x4f2 and Line by 1 to 86
  [0x000005d9]  Set column to 14
  [0x000005db]  Special opcode 21: advance Address by 2 to 0x4f4 and Line by 2 to 88
  [0x000005dc]  Set column to 7
  [0x000005de]  Special opcode 34: advance Address by 4 to 0x4f8 and Line by 1 to 89
  [0x000005df]  Set column to 14
  [0x000005e1]  Special opcode 21: advance Address by 2 to 0x4fa and Line by 2 to 91
  [0x000005e2]  Set column to 7
  [0x000005e4]  Special opcode 34: advance Address by 4 to 0x4fe and Line by 1 to 92
  [0x000005e5]  Set column to 14
  [0x000005e7]  Special opcode 21: advance Address by 2 to 0x500 and Line by 2 to 94
  [0x000005e8]  Set column to 7
  [0x000005ea]  Special opcode 34: advance Address by 4 to 0x504 and Line by 1 to 95
  [0x000005eb]  Set column to 14
  [0x000005ed]  Special opcode 22: advance Address by 2 to 0x506 and Line by 3 to 98
  [0x000005ee]  Set column to 9
  [0x000005f0]  Special opcode 35: advance Address by 4 to 0x50a and Line by 2 to 100
  [0x000005f1]  Set column to 1
  [0x000005f3]  Special opcode 20: advance Address by 2 to 0x50c and Line by 1 to 101
  [0x000005f4]  Advance PC by 12 to 0x518
  [0x000005f6]  Extended opcode 1: End of Sequence

  [0x000005f9]  Set column to 1
  [0x000005fb]  Extended opcode 2: set Address to 0x0
  [0x00000602]  Advance Line by 108 to 109
  [0x00000605]  Copy
  [0x00000606]  Set column to 17
  [0x00000608]  Special opcode 34: advance Address by 4 to 0x4 and Line by 1 to 110
  [0x00000609]  Set column to 1
  [0x0000060b]  Special opcode 90: advance Address by 12 to 0x10 and Line by 1 to 111
  [0x0000060c]  Advance PC by 16 to 0x20
  [0x0000060e]  Extended opcode 1: End of Sequence

  [0x00000611]  Set column to 1
  [0x00000613]  Extended opcode 2: set Address to 0x518
  [0x0000061a]  Advance Line by 118 to 119
  [0x0000061d]  Copy
  [0x0000061e]  Set column to 17
  [0x00000620]  Special opcode 34: advance Address by 4 to 0x51c and Line by 1 to 120
  [0x00000621]  Set column to 1
  [0x00000623]  Special opcode 90: advance Address by 12 to 0x528 and Line by 1 to 121
  [0x00000624]  Advance PC by 16 to 0x538
  [0x00000626]  Extended opcode 1: End of Sequence

  [0x00000629]  Set column to 1
  [0x0000062b]  Extended opcode 2: set Address to 0x0
  [0x00000632]  Advance Line by 127 to 128
  [0x00000635]  Copy
  [0x00000636]  Set column to 11
  [0x00000638]  Special opcode 34: advance Address by 4 to 0x4 and Line by 1 to 129
  [0x00000639]  Set column to 22
  [0x0000063b]  Special opcode 33: advance Address by 4 to 0x8 and Line by 0 to 129
  [0x0000063c]  Set column to 1
  [0x0000063e]  Special opcode 62: advance Address by 8 to 0x10 and Line by 1 to 130
  [0x0000063f]  Advance PC by 16 to 0x20
  [0x00000641]  Extended opcode 1: End of Sequence

  [0x00000644]  Set column to 1
  [0x00000646]  Extended opcode 2: set Address to 0x0
  [0x0000064d]  Advance Line by 135 to 136
  [0x00000650]  Copy
  [0x00000651]  Set column to 12
  [0x00000653]  Special opcode 34: advance Address by 4 to 0x4 and Line by 1 to 137
  [0x00000654]  Set column to 1
  [0x00000656]  Special opcode 48: advance Address by 6 to 0xa and Line by 1 to 138
  [0x00000657]  Advance PC by 14 to 0x18
  [0x00000659]  Extended opcode 1: End of Sequence

  [0x0000065c]  Set column to 1
  [0x0000065e]  Extended opcode 2: set Address to 0x538
  [0x00000665]  Advance Line by 143 to 144
  [0x00000668]  Copy
  [0x00000669]  Set column to 11
  [0x0000066b]  Special opcode 34: advance Address by 4 to 0x53c and Line by 1 to 145
  [0x0000066c]  Set column to 22
  [0x0000066e]  Special opcode 33: advance Address by 4 to 0x540 and Line by 0 to 145
  [0x0000066f]  Set column to 1
  [0x00000671]  Special opcode 62: advance Address by 8 to 0x548 and Line by 1 to 146
  [0x00000672]  Advance PC by 16 to 0x558
  [0x00000674]  Extended opcode 1: End of Sequence

  [0x00000677]  Set column to 1
  [0x00000679]  Extended opcode 2: set Address to 0x558
  [0x00000680]  Advance Line by 151 to 152
  [0x00000683]  Copy
  [0x00000684]  Set column to 3
  [0x00000686]  Special opcode 76: advance Address by 10 to 0x562 and Line by 1 to 153
  [0x00000687]  Set column to 14
  [0x00000689]  Special opcode 19: advance Address by 2 to 0x564 and Line by 0 to 153
  [0x0000068a]  Set column to 1
  [0x0000068c]  Special opcode 34: advance Address by 4 to 0x568 and Line by 1 to 154
  [0x0000068d]  Advance PC by 16 to 0x578
  [0x0000068f]  Extended opcode 1: End of Sequence

  [0x00000692]  Set column to 1
  [0x00000694]  Extended opcode 2: set Address to 0x578
  [0x0000069b]  Advance Line by 159 to 160
  [0x0000069e]  Copy
  [0x0000069f]  Set column to 18
  [0x000006a1]  Special opcode 192: advance Address by 26 to 0x592 and Line by 5 to 165
  [0x000006a2]  Special opcode 94: advance Address by 12 to 0x59e and Line by 5 to 170
  [0x000006a3]  Set column to 22
  [0x000006a5]  Special opcode 92: advance Address by 12 to 0x5aa and Line by 3 to 173
  [0x000006a6]  Special opcode 90: advance Address by 12 to 0x5b6 and Line by 1 to 174
  [0x000006a7]  Special opcode 90: advance Address by 12 to 0x5c2 and Line by 1 to 175
  [0x000006a8]  Special opcode 90: advance Address by 12 to 0x5ce and Line by 1 to 176
  [0x000006a9]  Set column to 7
  [0x000006ab]  Special opcode 92: advance Address by 12 to 0x5da and Line by 3 to 179
  [0x000006ac]  Set column to 3
  [0x000006ae]  Special opcode 76: advance Address by 10 to 0x5e4 and Line by 1 to 180
  [0x000006af]  Set column to 22
  [0x000006b1]  Special opcode 19: advance Address by 2 to 0x5e6 and Line by 0 to 180
  [0x000006b2]  Set column to 16
  [0x000006b4]  Special opcode 33: advance Address by 4 to 0x5ea and Line by 0 to 180
  [0x000006b5]  Set column to 3
  [0x000006b7]  Special opcode 20: advance Address by 2 to 0x5ec and Line by 1 to 181
  [0x000006b8]  Set column to 22
  [0x000006ba]  Special opcode 19: advance Address by 2 to 0x5ee and Line by 0 to 181
  [0x000006bb]  Set column to 16
  [0x000006bd]  Special opcode 47: advance Address by 6 to 0x5f4 and Line by 0 to 181
  [0x000006be]  Set column to 3
  [0x000006c0]  Special opcode 21: advance Address by 2 to 0x5f6 and Line by 2 to 183
  [0x000006c1]  Set column to 19
  [0x000006c3]  Special opcode 19: advance Address by 2 to 0x5f8 and Line by 0 to 183
  [0x000006c4]  Set column to 17
  [0x000006c6]  Special opcode 75: advance Address by 10 to 0x602 and Line by 0 to 183
  [0x000006c7]  Set column to 19
  [0x000006c9]  Special opcode 20: advance Address by 2 to 0x604 and Line by 1 to 184
  [0x000006ca]  Set column to 16
  [0x000006cc]  Special opcode 75: advance Address by 10 to 0x60e and Line by 0 to 184
  [0x000006cd]  Set column to 19
  [0x000006cf]  Special opcode 76: advance Address by 10 to 0x618 and Line by 1 to 185
  [0x000006d0]  Set column to 16
  [0x000006d2]  Special opcode 75: advance Address by 10 to 0x622 and Line by 0 to 185
  [0x000006d3]  Set column to 3
  [0x000006d5]  Special opcode 77: advance Address by 10 to 0x62c and Line by 2 to 187
  [0x000006d6]  Set column to 16
  [0x000006d8]  Special opcode 35: advance Address by 4 to 0x630 and Line by 2 to 189
  [0x000006d9]  Set column to 1
  [0x000006db]  Special opcode 118: advance Address by 16 to 0x640 and Line by 1 to 190
  [0x000006dc]  Advance PC by 48 to 0x670
  [0x000006de]  Extended opcode 1: End of Sequence


  Offset:                      0x6e1
  Length:                      283
  DWARF Version:               3
  Prologue Length:             29
  Minimum Instruction Length:  2
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table is empty.

 The File Name Table (offset 0x6fd):
  Entry	Dir	Time	Size	Name
  1	0	0	0	uart.c

 Line Number Statements:
  [0x00000708]  Set column to 25
  [0x0000070a]  Extended opcode 2: set Address to 0x670
  [0x00000711]  Special opcode 7: advance Address by 0 to 0x670 and Line by 2 to 3
  [0x00000712]  Set column to 10
  [0x00000714]  Special opcode 76: advance Address by 10 to 0x67a and Line by 1 to 4
  [0x00000715]  Set column to 12
  [0x00000717]  Extended opcode 4: set Discriminator to 1
  [0x0000071b]  Special opcode 19: advance Address by 2 to 0x67c and Line by 0 to 4
  [0x0000071c]  Set column to 10
  [0x0000071e]  Extended opcode 4: set Discriminator to 1
  [0x00000722]  Special opcode 47: advance Address by 6 to 0x682 and Line by 0 to 4
  [0x00000723]  Set column to 5
  [0x00000725]  Special opcode 34: advance Address by 4 to 0x686 and Line by 1 to 5
  [0x00000726]  Set column to 1
  [0x00000728]  Special opcode 62: advance Address by 8 to 0x68e and Line by 1 to 6
  [0x00000729]  Advance PC by 8 to 0x696
  [0x0000072b]  Extended opcode 1: End of Sequence

  [0x0000072e]  Set column to 18
  [0x00000730]  Extended opcode 2: set Address to 0x0
  [0x00000737]  Special opcode 12: advance Address by 0 to 0x0 and Line by 7 to 8
  [0x00000738]  Set column to 10
  [0x0000073a]  Special opcode 34: advance Address by 4 to 0x4 and Line by 1 to 9
  [0x0000073b]  Set column to 12
  [0x0000073d]  Extended opcode 4: set Discriminator to 1
  [0x00000741]  Special opcode 19: advance Address by 2 to 0x6 and Line by 0 to 9
  [0x00000742]  Set column to 10
  [0x00000744]  Extended opcode 4: set Discriminator to 1
  [0x00000748]  Special opcode 47: advance Address by 6 to 0xc and Line by 0 to 9
  [0x00000749]  Set column to 12
  [0x0000074b]  Special opcode 34: advance Address by 4 to 0x10 and Line by 1 to 10
  [0x0000074c]  Set column to 1
  [0x0000074e]  Special opcode 48: advance Address by 6 to 0x16 and Line by 1 to 11
  [0x0000074f]  Advance PC by 4 to 0x1a
  [0x00000751]  Extended opcode 1: End of Sequence

  [0x00000754]  Set column to 26
  [0x00000756]  Extended opcode 2: set Address to 0x0
  [0x0000075d]  Advance Line by 12 to 13
  [0x0000075f]  Copy
  [0x00000760]  Set column to 11
  [0x00000762]  Special opcode 49: advance Address by 6 to 0x6 and Line by 2 to 15
  [0x00000763]  Set column to 10
  [0x00000765]  Special opcode 35: advance Address by 4 to 0xa and Line by 2 to 17
  [0x00000766]  Set column to 24
  [0x00000768]  Extended opcode 4: set Discriminator to 3
  [0x0000076c]  Special opcode 36: advance Address by 4 to 0xe and Line by 3 to 20
  [0x0000076d]  Set column to 25
  [0x0000076f]  Extended opcode 4: set Discriminator to 3
  [0x00000773]  Special opcode 62: advance Address by 8 to 0x16 and Line by 1 to 21
  [0x00000774]  Set column to 23
  [0x00000776]  Extended opcode 4: set Discriminator to 3
  [0x0000077a]  Special opcode 48: advance Address by 6 to 0x1c and Line by 1 to 22
  [0x0000077b]  Set column to 5
  [0x0000077d]  Extended opcode 4: set Discriminator to 3
  [0x00000781]  Special opcode 48: advance Address by 6 to 0x22 and Line by 1 to 23
  [0x00000782]  Set column to 34
  [0x00000784]  Extended opcode 4: set Discriminator to 1
  [0x00000788]  Special opcode 47: advance Address by 6 to 0x28 and Line by 0 to 23
  [0x00000789]  Set column to 58
  [0x0000078b]  Extended opcode 4: set Discriminator to 2
  [0x0000078f]  Special opcode 47: advance Address by 6 to 0x2e and Line by 0 to 23
  [0x00000790]  Set column to 21
  [0x00000792]  Special opcode 49: advance Address by 6 to 0x34 and Line by 2 to 25
  [0x00000793]  Set column to 12
  [0x00000795]  Special opcode 49: advance Address by 6 to 0x3a and Line by 2 to 27
  [0x00000796]  Set column to 1
  [0x00000798]  Special opcode 20: advance Address by 2 to 0x3c and Line by 1 to 28
  [0x00000799]  Advance PC by 12 to 0x48
  [0x0000079b]  Extended opcode 1: End of Sequence

  [0x0000079e]  Set column to 18
  [0x000007a0]  Extended opcode 2: set Address to 0x696
  [0x000007a7]  Advance Line by 29 to 30
  [0x000007a9]  Copy
  [0x000007aa]  Set column to 5
  [0x000007ac]  Special opcode 34: advance Address by 4 to 0x69a and Line by 1 to 31
  [0x000007ad]  Set column to 1
  [0x000007af]  Special opcode 104: advance Address by 14 to 0x6a8 and Line by 1 to 32
  [0x000007b0]  Advance PC by 4 to 0x6ac
  [0x000007b2]  Extended opcode 1: End of Sequence

  [0x000007b5]  Set column to 33
  [0x000007b7]  Extended opcode 2: set Address to 0x6ac
  [0x000007be]  Advance Line by 33 to 34
  [0x000007c0]  Copy
  [0x000007c1]  Set column to 10
  [0x000007c3]  Special opcode 62: advance Address by 8 to 0x6b4 and Line by 1 to 35
  [0x000007c4]  Set column to 31
  [0x000007c6]  Extended opcode 4: set Discriminator to 2
  [0x000007ca]  Special opcode 19: advance Address by 2 to 0x6b6 and Line by 0 to 35
  [0x000007cb]  Set column to 17
  [0x000007cd]  Extended opcode 4: set Discriminator to 2
  [0x000007d1]  Special opcode 47: advance Address by 6 to 0x6bc and Line by 0 to 35
  [0x000007d2]  Set column to 11
  [0x000007d4]  Extended opcode 4: set Discriminator to 1
  [0x000007d8]  Special opcode 61: advance Address by 8 to 0x6c4 and Line by 0 to 35
  [0x000007d9]  Set column to 10
  [0x000007db]  Extended opcode 4: set Discriminator to 1
  [0x000007df]  Special opcode 33: advance Address by 4 to 0x6c8 and Line by 0 to 35
  [0x000007e0]  Set column to 1
  [0x000007e2]  Special opcode 34: advance Address by 4 to 0x6cc and Line by 1 to 36
  [0x000007e3]  Advance PC by 10 to 0x6d6
  [0x000007e5]  Extended opcode 1: End of Sequence

  [0x000007e8]  Set column to 35
  [0x000007ea]  Extended opcode 2: set Address to 0x6d6
  [0x000007f1]  Advance Line by 37 to 38
  [0x000007f3]  Copy
  [0x000007f4]  Set column to 5
  [0x000007f6]  Special opcode 62: advance Address by 8 to 0x6de and Line by 1 to 39
  [0x000007f7]  Special opcode 48: advance Address by 6 to 0x6e4 and Line by 1 to 40
  [0x000007f8]  Set column to 1
  [0x000007fa]  Special opcode 48: advance Address by 6 to 0x6ea and Line by 1 to 41
  [0x000007fb]  Advance PC by 8 to 0x6f2
  [0x000007fd]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 6164632e 6300696e 69745f61 64630049 adc.c.init_adc.I
  0x00000010 4e543136 5500666c 6f617400 756e7369 NT16U.float.unsi
  0x00000020 676e6564 20636861 72007368 6f727420 gned char.short 
  0x00000030 756e7369 676e6564 20696e74 005f5f75 unsigned int.__u
  0x00000040 696e7433 325f7400 646f7562 6c650073 int32_t.double.s
  0x00000050 686f7274 20696e74 006c6f6e 67206c6f hort int.long lo
  0x00000060 6e672075 6e736967 6e656420 696e7400 ng unsigned int.
  0x00000070 6c6f6e67 206c6f6e 6720696e 7400474e long long int.GN
  0x00000080 55204339 3920392e 332e3120 32303230 U C99 9.3.1 2020
  0x00000090 30343038 20287265 6c656173 6529202d 0408 (release) -
  0x000000a0 6d746875 6d62202d 6d637075 3d636f72 mthumb -mcpu=cor
  0x000000b0 7465782d 6d34202d 6d667075 3d667076 tex-m4 -mfpu=fpv
  0x000000c0 342d7370 2d643136 202d6d66 6c6f6174 4-sp-d16 -mfloat
  0x000000d0 2d616269 3d736f66 74667020 2d6d6172 -abi=softfp -mar
  0x000000e0 63683d61 726d7637 652d6d2b 6670202d ch=armv7e-m+fp -
  0x000000f0 67202d4f 73202d4f 30202d73 74643d63 g -Os -O0 -std=c
  0x00000100 3939202d 6666756e 6374696f 6e2d7365 99 -ffunction-se
  0x00000110 6374696f 6e73202d 66646174 612d7365 ctions -fdata-se
  0x00000120 6374696f 6e730067 65745f61 6463002f ctions.get_adc./
  0x00000130 686f6d65 2f62616c 6465722f 446f6375 home/balder/Docu
  0x00000140 6d656e74 732f756e 692f6c65 63747572 ments/uni/lectur
  0x00000150 65732f53 656d6573 74657220 342f7365 es/Semester 4/se
  0x00000160 6d657374 65727072 6f6a2f6d 6963726f mesterproj/micro
  0x00000170 636f6e74 726f6c6c 65720073 65747570 controller.setup
  0x00000180 506f7274 46006275 74746f6e 5f737731 PortF.button_sw1
  0x00000190 5f707265 73736564 00424c55 45004359 _pressed.BLUE.CY
  0x000001a0 414e004d 4147454e 54410063 6f6c6f72 AN.MAGENTA.color
  0x000001b0 00475245 454e0057 48495445 00736574 .GREEN.WHITE.set
  0x000001c0 4c454443 6f6c6f72 00677069 6f2e6300 LEDColor.gpio.c.
  0x000001d0 59454c4c 4f57006c 6f775f62 79746500 YELLOW.low_byte.
  0x000001e0 73657475 70006869 67685f62 79746500 setup.high_byte.
  0x000001f0 6d61696e 006d6169 6e2e6300 696e7075 main.main.c.inpu
  0x00000200 74005f65 62737300 5f627373 0070756c t._ebss._bss.pul
  0x00000210 53746163 6b005379 73546963 6b5f4861 Stack.SysTick_Ha
  0x00000220 6e646c65 7200675f 70666e56 6563746f ndler.g_pfnVecto
  0x00000230 72730052 65736574 49535200 5f656461 rs.ResetISR._eda
  0x00000240 74610070 756c4465 73740049 6e744465 ta.pulDest.IntDe
  0x00000250 6661756c 7448616e 646c6572 00466175 faultHandler.Fau
  0x00000260 6c744953 52007374 61727475 705f6763 ltISR.startup_gc
  0x00000270 632e6300 4750494f 465f4861 6e646c65 c.c.GPIOF_Handle
  0x00000280 72005f65 74657874 0070756c 53726300 r._etext.pulSrc.
  0x00000290 5f646174 61004e6d 69535200 72657375 _data.NmiSR.resu
  0x000002a0 6c740061 6e74616c 5f73746f 70626974 lt.antal_stopbit
  0x000002b0 7300616e 74616c5f 64617461 62697473 s.antal_databits
  0x000002c0 006c6372 685f7374 6f706269 74730075 .lcrh_stopbits.u
  0x000002d0 61727430 5f72785f 72647900 75617274 art0_rx_rdy.uart
  0x000002e0 305f7075 74630075 61727430 2e630042 0_putc.uart0.c.B
  0x000002f0 4f4f4c45 414e0062 6175645f 72617465 OOLEAN.baud_rate
  0x00000300 00756172 74305f66 69666f73 5f646973 .uart0_fifos_dis
  0x00000310 61626c65 00756172 74305f66 69666f73 able.uart0_fifos
  0x00000320 5f656e61 626c6500 494e5438 55007561 _enable.INT8U.ua
  0x00000330 7274305f 696e6974 00756172 74305f74 rt0_init.uart0_t
  0x00000340 785f7264 7900494e 54333255 00756172 x_rdy.INT32U.uar
  0x00000350 74305f67 65746300 6c637268 5f706172 t0_getc.lcrh_par
  0x00000360 69747900 6c637268 5f646174 61626974 ity.lcrh_databit
  0x00000370 73007561 72745f70 75745f73 7472696e s.uart_put_strin
  0x00000380 67007561 72745f70 75746300 75617274 g.uart_putc.uart
  0x00000390 5f676574 63006375 7272656e 745f6368 _getc.current_ch
  0x000003a0 61720075 6172742e 63007561 72745f67 ar.uart.c.uart_g
  0x000003b0 65745f73 7472696e 67006275 66666572 et_string.buffer
  0x000003c0 5f706f69 6e746572 00756172 745f696e _pointer.uart_in
  0x000003d0 69740062 75666665 72007561 72745f70 it.buffer.uart_p
  0x000003e0 75745f73 7472696e 676c6e00          ut_stringln.

Contents of the .debug_frame section:


00000000 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000010 0000001c 00000000 FDE cie=00000000 pc=0000026c..00000284
  DW_CFA_advance_loc: 2 to 0000026e
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 00000270
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 10 to 0000027a
  DW_CFA_def_cfa_register: r13
  DW_CFA_advance_loc: 4 to 0000027e
  DW_CFA_restore: r7
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop

00000030 0000001c 00000000 FDE cie=00000000 pc=00000284..000002f8
  DW_CFA_advance_loc: 2 to 00000286
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 00000288
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 74 to 000002d2
  DW_CFA_def_cfa_register: r13
  DW_CFA_advance_loc: 4 to 000002d6
  DW_CFA_restore: r7
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop

00000050 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000060 0000001c 00000050 FDE cie=00000050 pc=000002f8..00000388
  DW_CFA_advance_loc: 2 to 000002fa
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 000002fc
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 92 to 00000358
  DW_CFA_def_cfa_register: r13
  DW_CFA_advance_loc: 4 to 0000035c
  DW_CFA_restore: r7
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop

00000080 00000024 00000050 FDE cie=00000050 pc=00000388..000003ac
  DW_CFA_advance_loc: 2 to 0000038a
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 0000038c
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 0000038e
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 16 to 0000039e
  DW_CFA_def_cfa_offset: 4
  DW_CFA_advance_loc: 2 to 000003a0
  DW_CFA_def_cfa_register: r13
  DW_CFA_advance_loc: 4 to 000003a4
  DW_CFA_restore: r7
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000000a8 0000001c 00000050 FDE cie=00000050 pc=00000000..0000001c
  DW_CFA_advance_loc: 2 to 00000002
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 00000004
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 14 to 00000012
  DW_CFA_def_cfa_register: r13
  DW_CFA_advance_loc: 4 to 00000016
  DW_CFA_restore: r7
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop

000000c8 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

000000d8 00000018 000000c8 FDE cie=000000c8 pc=000003ac..000003c6
  DW_CFA_advance_loc: 2 to 000003ae
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 2 to 000003b0
  DW_CFA_def_cfa_register: r7
  DW_CFA_nop
  DW_CFA_nop

000000f4 0000001c 000000c8 FDE cie=000000c8 pc=000003c8..00000400
  DW_CFA_advance_loc: 2 to 000003ca
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 2 to 000003cc
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 000003ce
  DW_CFA_def_cfa_register: r7
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000114 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000124 00000020 00000114 FDE cie=00000114 pc=00000400..00000454
  DW_CFA_advance_loc: 2 to 00000402
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 2 to 00000404
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 00000406
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 60 to 00000442
  DW_CFA_def_cfa_offset: 8
  DW_CFA_advance_loc: 2 to 00000444
  DW_CFA_def_cfa_register: r13
  DW_CFA_nop

00000148 00000014 00000114 FDE cie=00000114 pc=0000045c..00000462
  DW_CFA_advance_loc: 2 to 0000045e
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 00000460
  DW_CFA_def_cfa_register: r7

00000160 00000014 00000114 FDE cie=00000114 pc=00000462..00000468
  DW_CFA_advance_loc: 2 to 00000464
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 00000466
  DW_CFA_def_cfa_register: r7

00000178 00000014 00000114 FDE cie=00000114 pc=00000468..0000046e
  DW_CFA_advance_loc: 2 to 0000046a
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 0000046c
  DW_CFA_def_cfa_register: r7

00000190 00000014 00000114 FDE cie=00000114 pc=0000046e..00000474
  DW_CFA_advance_loc: 2 to 00000470
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 00000472
  DW_CFA_def_cfa_register: r7

000001a8 00000014 00000114 FDE cie=00000114 pc=00000474..0000047a
  DW_CFA_advance_loc: 2 to 00000476
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 00000478
  DW_CFA_def_cfa_register: r7

000001c0 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

000001d0 00000024 000001c0 FDE cie=000001c0 pc=0000047a..000004a6
  DW_CFA_advance_loc: 2 to 0000047c
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 0000047e
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 00000480
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 30 to 0000049e
  DW_CFA_def_cfa_offset: 4
  DW_CFA_advance_loc: 2 to 000004a0
  DW_CFA_def_cfa_register: r13
  DW_CFA_advance_loc: 4 to 000004a4
  DW_CFA_restore: r7
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000001f8 00000024 000001c0 FDE cie=000001c0 pc=000004a6..000004c8
  DW_CFA_advance_loc: 2 to 000004a8
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 000004aa
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 000004ac
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 20 to 000004c0
  DW_CFA_def_cfa_offset: 4
  DW_CFA_advance_loc: 2 to 000004c2
  DW_CFA_def_cfa_register: r13
  DW_CFA_advance_loc: 4 to 000004c6
  DW_CFA_restore: r7
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000220 00000024 000001c0 FDE cie=000001c0 pc=000004c8..00000518
  DW_CFA_advance_loc: 2 to 000004ca
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 000004cc
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 2 to 000004ce
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 66 to 00000510
  DW_CFA_def_cfa_offset: 4
  DW_CFA_advance_loc: 2 to 00000512
  DW_CFA_def_cfa_register: r13
  DW_CFA_advance_loc: 4 to 00000516
  DW_CFA_restore: r7
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000248 0000001c 000001c0 FDE cie=000001c0 pc=00000000..00000020
  DW_CFA_advance_loc: 2 to 00000002
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 00000004
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 16 to 00000014
  DW_CFA_def_cfa_register: r13
  DW_CFA_advance_loc: 4 to 00000018
  DW_CFA_restore: r7
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop

00000268 0000001c 000001c0 FDE cie=000001c0 pc=00000518..00000538
  DW_CFA_advance_loc: 2 to 0000051a
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 0000051c
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 16 to 0000052c
  DW_CFA_def_cfa_register: r13
  DW_CFA_advance_loc: 4 to 00000530
  DW_CFA_restore: r7
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop

00000288 0000001c 000001c0 FDE cie=000001c0 pc=00000000..00000020
  DW_CFA_advance_loc: 2 to 00000002
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 00000004
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 16 to 00000014
  DW_CFA_def_cfa_register: r13
  DW_CFA_advance_loc: 4 to 00000018
  DW_CFA_restore: r7
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop

000002a8 0000001c 000001c0 FDE cie=000001c0 pc=00000000..00000018
  DW_CFA_advance_loc: 2 to 00000002
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 00000004
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 10 to 0000000e
  DW_CFA_def_cfa_register: r13
  DW_CFA_advance_loc: 4 to 00000012
  DW_CFA_restore: r7
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop

000002c8 0000001c 000001c0 FDE cie=000001c0 pc=00000538..00000558
  DW_CFA_advance_loc: 2 to 0000053a
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 0000053c
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 16 to 0000054c
  DW_CFA_def_cfa_register: r13
  DW_CFA_advance_loc: 4 to 00000550
  DW_CFA_restore: r7
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop

000002e8 00000024 000001c0 FDE cie=000001c0 pc=00000558..00000578
  DW_CFA_advance_loc: 2 to 0000055a
  DW_CFA_def_cfa_offset: 4
  DW_CFA_offset: r7 at cfa-4
  DW_CFA_advance_loc: 2 to 0000055c
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 0000055e
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 14 to 0000056c
  DW_CFA_def_cfa_offset: 4
  DW_CFA_advance_loc: 2 to 0000056e
  DW_CFA_def_cfa_register: r13
  DW_CFA_advance_loc: 4 to 00000572
  DW_CFA_restore: r7
  DW_CFA_def_cfa_offset: 0
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000310 00000024 000001c0 FDE cie=000001c0 pc=00000578..00000670
  DW_CFA_advance_loc: 2 to 0000057a
  DW_CFA_def_cfa_offset: 12
  DW_CFA_offset: r4 at cfa-12
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 2 to 0000057c
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 2 to 0000057e
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc1: 198 to 00000644
  DW_CFA_def_cfa_offset: 12
  DW_CFA_advance_loc: 2 to 00000646
  DW_CFA_def_cfa_register: r13
  DW_CFA_nop
  DW_CFA_nop

00000338 0000000c ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 2
  Data alignment factor: -4
  Return address column: 14

  DW_CFA_def_cfa: r13 ofs 0

00000348 00000020 00000338 FDE cie=00000338 pc=00000670..00000696
  DW_CFA_advance_loc: 2 to 00000672
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 2 to 00000674
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 00000676
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 28 to 00000692
  DW_CFA_def_cfa_offset: 8
  DW_CFA_advance_loc: 2 to 00000694
  DW_CFA_def_cfa_register: r13
  DW_CFA_nop

0000036c 00000018 00000338 FDE cie=00000338 pc=00000000..0000001a
  DW_CFA_advance_loc: 2 to 00000002
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 2 to 00000004
  DW_CFA_def_cfa_register: r7
  DW_CFA_nop
  DW_CFA_nop

00000388 00000020 00000338 FDE cie=00000338 pc=00000000..00000048
  DW_CFA_advance_loc: 2 to 00000002
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 2 to 00000004
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 00000006
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 58 to 00000040
  DW_CFA_def_cfa_offset: 8
  DW_CFA_advance_loc: 2 to 00000042
  DW_CFA_def_cfa_register: r13
  DW_CFA_nop

000003ac 00000018 00000338 FDE cie=00000338 pc=00000696..000006ac
  DW_CFA_advance_loc: 2 to 00000698
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 2 to 0000069a
  DW_CFA_def_cfa_register: r7
  DW_CFA_nop
  DW_CFA_nop

000003c8 00000020 00000338 FDE cie=00000338 pc=000006ac..000006d6
  DW_CFA_advance_loc: 2 to 000006ae
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 2 to 000006b0
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 000006b2
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 32 to 000006d2
  DW_CFA_def_cfa_offset: 8
  DW_CFA_advance_loc: 2 to 000006d4
  DW_CFA_def_cfa_register: r13
  DW_CFA_nop

000003ec 00000020 00000338 FDE cie=00000338 pc=000006d6..000006f2
  DW_CFA_advance_loc: 2 to 000006d8
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r7 at cfa-8
  DW_CFA_offset: r14 at cfa-4
  DW_CFA_advance_loc: 2 to 000006da
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 000006dc
  DW_CFA_def_cfa_register: r7
  DW_CFA_advance_loc: 18 to 000006ee
  DW_CFA_def_cfa_offset: 8
  DW_CFA_advance_loc: 2 to 000006f0
  DW_CFA_def_cfa_register: r13
  DW_CFA_nop


Disassembly of section .text:

00000000 <g_pfnVectors>:
   0:	00 01 00 20 01 04 00 00 5d 04 00 00 63 04 00 00     ... ....]...c...
  10:	69 04 00 00 69 04 00 00 69 04 00 00 00 00 00 00     i...i...i.......
	...
  2c:	69 04 00 00 69 04 00 00 00 00 00 00 69 04 00 00     i...i.......i...
  3c:	6f 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     o...i...i...i...
  4c:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
  5c:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
  6c:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
  7c:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
  8c:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
  9c:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
  ac:	69 04 00 00 69 04 00 00 69 04 00 00 75 04 00 00     i...i...i...u...
  bc:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
  cc:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
  dc:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
  ec:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
  fc:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
 10c:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
 11c:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
 12c:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
 13c:	69 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     i...............
 14c:	00 00 00 00 69 04 00 00 69 04 00 00 69 04 00 00     ....i...i...i...
 15c:	69 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     i...............
	...
 1b0:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
 1c0:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
 1d0:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
 1e0:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
 1f0:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
 200:	69 04 00 00 69 04 00 00 69 04 00 00 00 00 00 00     i...i...i.......
 210:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
 220:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
 230:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
 240:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
 250:	69 04 00 00 69 04 00 00 69 04 00 00 69 04 00 00     i...i...i...i...
 260:	69 04 00 00 69 04 00 00 69 04 00 00                 i...i...i...

0000026c <get_adc>:
#include <stdint.h>
#include "tm4c123gh6pm.h"
#include "emp_type.h"

INT16U get_adc()
{
 26c:	b480      	push	{r7}
 26e:	af00      	add	r7, sp, #0
  return( ADC0_SSFIFO3_R );
 270:	4b03      	ldr	r3, [pc, #12]	; (280 <get_adc+0x14>)
 272:	681b      	ldr	r3, [r3, #0]
 274:	b29b      	uxth	r3, r3
}
 276:	4618      	mov	r0, r3
 278:	46bd      	mov	sp, r7
 27a:	f85d 7b04 	ldr.w	r7, [sp], #4
 27e:	4770      	bx	lr
 280:	400380a8 	.word	0x400380a8

00000284 <init_adc>:

init_adc()
{
 284:	b480      	push	{r7}
 286:	af00      	add	r7, sp, #0

  SYSCTL_RCGC0_R |= SYSCTL_RCGC0_ADC0;
 288:	4b13      	ldr	r3, [pc, #76]	; (2d8 <init_adc+0x54>)
 28a:	681b      	ldr	r3, [r3, #0]
 28c:	4a12      	ldr	r2, [pc, #72]	; (2d8 <init_adc+0x54>)
 28e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 292:	6013      	str	r3, [r2, #0]
  /* SYSCTL_RCGC1_R |= SYSCTL_RCGC0_ADC1; */
  SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOB;
 294:	4b11      	ldr	r3, [pc, #68]	; (2dc <init_adc+0x58>)
 296:	681b      	ldr	r3, [r3, #0]
 298:	4a10      	ldr	r2, [pc, #64]	; (2dc <init_adc+0x58>)
 29a:	f043 0302 	orr.w	r3, r3, #2
 29e:	6013      	str	r3, [r2, #0]
  // Set ADC0 Sequencer priorities.
  // SS3(bit12-13): Priority = 0 ; Highest
  // SS2(bit8-9):   Priority = 1
  // SS1(bit4-5):   Priority = 2
  // SS0(bit0-1):   Priority = 3 ; Lowest
  ADC0_SSPRI_R = 0x00000123;
 2a0:	4b0f      	ldr	r3, [pc, #60]	; (2e0 <init_adc+0x5c>)
 2a2:	f240 1223 	movw	r2, #291	; 0x123
 2a6:	601a      	str	r2, [r3, #0]

  //Disable all sequencers
  /* ADC0_ACTSS_R = 0; */

  // Trigger for Sequencer 3 (bit 12-15) = 0xF = Always.
  ADC0_EMUX_R |= 0x0000F000;
 2a8:	4b0e      	ldr	r3, [pc, #56]	; (2e4 <init_adc+0x60>)
 2aa:	681b      	ldr	r3, [r3, #0]
 2ac:	4a0d      	ldr	r2, [pc, #52]	; (2e4 <init_adc+0x60>)
 2ae:	f443 4370 	orr.w	r3, r3, #61440	; 0xf000
 2b2:	6013      	str	r3, [r2, #0]
  /* ADC1_EMUX_R |= 0x0000F000; */

  // sample multiplexer input, sequencer 3 select
  ADC0_SSMUX3_R = 10; // Use ACD input 10
 2b4:	4b0c      	ldr	r3, [pc, #48]	; (2e8 <init_adc+0x64>)
 2b6:	220a      	movs	r2, #10
 2b8:	601a      	str	r2, [r3, #0]
  /* ADC1_SSMUX3_R = 11; // Use ACD input 11 */

  //ADC sample sequence control 3 = END0
  ADC0_SSCTL3_R =  0x00000002;
 2ba:	4b0c      	ldr	r3, [pc, #48]	; (2ec <init_adc+0x68>)
 2bc:	2202      	movs	r2, #2
 2be:	601a      	str	r2, [r3, #0]
  /* ADC1_SSCTL3_R =  0x00000002; */

  //enable sequencer 3
  ADC0_ACTSS_R = 0x00000008;
 2c0:	4b0b      	ldr	r3, [pc, #44]	; (2f0 <init_adc+0x6c>)
 2c2:	2208      	movs	r2, #8
 2c4:	601a      	str	r2, [r3, #0]
  /* ADC1_ACTSS_R = 0x00000008; */

  // Start conversion at sequencer 3
  ADC0_PSSI_R = 0x08;
 2c6:	4b0b      	ldr	r3, [pc, #44]	; (2f4 <init_adc+0x70>)
 2c8:	2208      	movs	r2, #8
 2ca:	601a      	str	r2, [r3, #0]
  /* ADC1_PSSI_R = 0x08; */
}
 2cc:	bf00      	nop
 2ce:	4618      	mov	r0, r3
 2d0:	46bd      	mov	sp, r7
 2d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 2d6:	4770      	bx	lr
 2d8:	400fe100 	.word	0x400fe100
 2dc:	400fe108 	.word	0x400fe108
 2e0:	40038020 	.word	0x40038020
 2e4:	40038014 	.word	0x40038014
 2e8:	400380a0 	.word	0x400380a0
 2ec:	400380a4 	.word	0x400380a4
 2f0:	40038000 	.word	0x40038000
 2f4:	40038028 	.word	0x40038028

000002f8 <setupPortF>:
#include "gpio.h"
#include "tm4c123gh6pm.h"

void setupPortF() {
 2f8:	b480      	push	{r7}
 2fa:	af00      	add	r7, sp, #0
  // Enable the GPIO port that is used for the on-board LEDs and switches.
  SYSCTL_RCGC2_R = SYSCTL_RCGC2_GPIOF;
 2fc:	4b18      	ldr	r3, [pc, #96]	; (360 <setupPortF+0x68>)
 2fe:	2220      	movs	r2, #32
 300:	601a      	str	r2, [r3, #0]
  // Set the direction as output (PF1 - PF3).
  GPIO_PORTF_DIR_R = 0b00001110;
 302:	4b18      	ldr	r3, [pc, #96]	; (364 <setupPortF+0x6c>)
 304:	220e      	movs	r2, #14
 306:	601a      	str	r2, [r3, #0]
  // Enable the GPIO pins for digital function (PF1 - PF4)
  GPIO_PORTF_DEN_R = 0b00011110;
 308:	4b17      	ldr	r3, [pc, #92]	; (368 <setupPortF+0x70>)
 30a:	221e      	movs	r2, #30
 30c:	601a      	str	r2, [r3, #0]
  // Enable internal pull-up (PF4).
  GPIO_PORTF_PUR_R = 0b00010000;
 30e:	4b17      	ldr	r3, [pc, #92]	; (36c <setupPortF+0x74>)
 310:	2210      	movs	r2, #16
 312:	601a      	str	r2, [r3, #0]

  // Set the interrupt type for PF4 (SW1)
  NVIC_EN0_R |= (1 << (INT_GPIOF - 16)); // enable interrupt in NVIC
 314:	4b16      	ldr	r3, [pc, #88]	; (370 <setupPortF+0x78>)
 316:	681b      	ldr	r3, [r3, #0]
 318:	4a15      	ldr	r2, [pc, #84]	; (370 <setupPortF+0x78>)
 31a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 31e:	6013      	str	r3, [r2, #0]
  NVIC_PRI7_R = (NVIC_PRI7_R & 0xFF00FFFF) | 0x00A00000; // priority 5
 320:	4b14      	ldr	r3, [pc, #80]	; (374 <setupPortF+0x7c>)
 322:	681b      	ldr	r3, [r3, #0]
 324:	f423 037f 	bic.w	r3, r3, #16711680	; 0xff0000
 328:	4a12      	ldr	r2, [pc, #72]	; (374 <setupPortF+0x7c>)
 32a:	f443 0320 	orr.w	r3, r3, #10485760	; 0xa00000
 32e:	6013      	str	r3, [r2, #0]
  GPIO_PORTF_IS_R |= 0b00010000;  // PF4 is edge-sensitive
 330:	4b11      	ldr	r3, [pc, #68]	; (378 <setupPortF+0x80>)
 332:	681b      	ldr	r3, [r3, #0]
 334:	4a10      	ldr	r2, [pc, #64]	; (378 <setupPortF+0x80>)
 336:	f043 0310 	orr.w	r3, r3, #16
 33a:	6013      	str	r3, [r2, #0]
  GPIO_PORTF_IBE_R |= 0b00010000; // PF4 is both edges
 33c:	4b0f      	ldr	r3, [pc, #60]	; (37c <setupPortF+0x84>)
 33e:	681b      	ldr	r3, [r3, #0]
 340:	4a0e      	ldr	r2, [pc, #56]	; (37c <setupPortF+0x84>)
 342:	f043 0310 	orr.w	r3, r3, #16
 346:	6013      	str	r3, [r2, #0]
  // GPIO_PORTF_IEV_R |= 0b00010000; // PF4 falling edge event
  GPIO_PORTF_IM_R = 0b00010000;  // Interrupt on PF4
 348:	4b0d      	ldr	r3, [pc, #52]	; (380 <setupPortF+0x88>)
 34a:	2210      	movs	r2, #16
 34c:	601a      	str	r2, [r3, #0]
  GPIO_PORTF_ICR_R = 0b00010000; // clear flag4
 34e:	4b0d      	ldr	r3, [pc, #52]	; (384 <setupPortF+0x8c>)
 350:	2210      	movs	r2, #16
 352:	601a      	str	r2, [r3, #0]
}
 354:	bf00      	nop
 356:	46bd      	mov	sp, r7
 358:	f85d 7b04 	ldr.w	r7, [sp], #4
 35c:	4770      	bx	lr
 35e:	bf00      	nop
 360:	400fe108 	.word	0x400fe108
 364:	40025400 	.word	0x40025400
 368:	4002551c 	.word	0x4002551c
 36c:	40025510 	.word	0x40025510
 370:	e000e100 	.word	0xe000e100
 374:	e000e41c 	.word	0xe000e41c
 378:	40025404 	.word	0x40025404
 37c:	40025408 	.word	0x40025408
 380:	40025410 	.word	0x40025410
 384:	4002541c 	.word	0x4002541c

00000388 <setLEDColor>:

void setLEDColor(enum LEDColor color) { GPIO_PORTF_DATA_R = color << 1; }
 388:	b480      	push	{r7}
 38a:	b083      	sub	sp, #12
 38c:	af00      	add	r7, sp, #0
 38e:	4603      	mov	r3, r0
 390:	71fb      	strb	r3, [r7, #7]
 392:	79fb      	ldrb	r3, [r7, #7]
 394:	005a      	lsls	r2, r3, #1
 396:	4b04      	ldr	r3, [pc, #16]	; (3a8 <setLEDColor+0x20>)
 398:	601a      	str	r2, [r3, #0]
 39a:	bf00      	nop
 39c:	370c      	adds	r7, #12
 39e:	46bd      	mov	sp, r7
 3a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 3a4:	4770      	bx	lr
 3a6:	bf00      	nop
 3a8:	400253fc 	.word	0x400253fc

000003ac <setup>:
#include "adc.h"

#include "tm4c123gh6pm.h"
#include <stdint.h>

void setup() {
 3ac:	b580      	push	{r7, lr}
 3ae:	af00      	add	r7, sp, #0
    setupPortF();
 3b0:	f7ff ffa2 	bl	2f8 <setupPortF>
    setLEDColor(GREEN);
 3b4:	2004      	movs	r0, #4
 3b6:	f7ff ffe7 	bl	388 <setLEDColor>
    uart_init();
 3ba:	f000 f96c 	bl	696 <uart_init>
    init_adc();
 3be:	f7ff ff61 	bl	284 <init_adc>
}
 3c2:	bf00      	nop
 3c4:	bd80      	pop	{r7, pc}
	...

000003c8 <main>:

int main(void) {
 3c8:	b580      	push	{r7, lr}
 3ca:	b082      	sub	sp, #8
 3cc:	af00      	add	r7, sp, #0
    setup();
 3ce:	f7ff ffed 	bl	3ac <setup>
    uart_put_stringln("Starting...");
 3d2:	480a      	ldr	r0, [pc, #40]	; (3fc <main+0x34>)
 3d4:	f000 f97f 	bl	6d6 <uart_put_stringln>
    setLEDColor(BLUE);
 3d8:	2002      	movs	r0, #2
 3da:	f7ff ffd5 	bl	388 <setLEDColor>

    while (69) {
        INT16U input = get_adc();
 3de:	f7ff ff45 	bl	26c <get_adc>
 3e2:	4603      	mov	r3, r0
 3e4:	80fb      	strh	r3, [r7, #6]
        char high_byte = input >> 8;
 3e6:	88fb      	ldrh	r3, [r7, #6]
 3e8:	0a1b      	lsrs	r3, r3, #8
 3ea:	b29b      	uxth	r3, r3
 3ec:	717b      	strb	r3, [r7, #5]
        char low_byte = input & 0x00FF;
 3ee:	88fb      	ldrh	r3, [r7, #6]
 3f0:	713b      	strb	r3, [r7, #4]
        uart_putc(high_byte);
 3f2:	797b      	ldrb	r3, [r7, #5]
 3f4:	4618      	mov	r0, r3
 3f6:	f000 f93b 	bl	670 <uart_putc>
    while (69) {
 3fa:	e7f0      	b.n	3de <main+0x16>
 3fc:	000006f4 	.word	0x000006f4

00000400 <ResetISR>:
// actions (such as making decisions based on the reset cause register, and
// resetting the bits in that register) are left solely in the hands of the
// application.
//
//*****************************************************************************
void ResetISR(void) {
 400:	b580      	push	{r7, lr}
 402:	b082      	sub	sp, #8
 404:	af00      	add	r7, sp, #0
  unsigned long *pulSrc, *pulDest;

  //
  // Copy the data segment initializers from flash to SRAM.
  //
  pulSrc = &_etext;
 406:	4b10      	ldr	r3, [pc, #64]	; (448 <zero_loop+0x18>)
 408:	607b      	str	r3, [r7, #4]
  for (pulDest = &_data; pulDest < &_edata;) {
 40a:	4b10      	ldr	r3, [pc, #64]	; (44c <zero_loop+0x1c>)
 40c:	603b      	str	r3, [r7, #0]
 40e:	e007      	b.n	420 <ResetISR+0x20>
    *pulDest++ = *pulSrc++;
 410:	687a      	ldr	r2, [r7, #4]
 412:	1d13      	adds	r3, r2, #4
 414:	607b      	str	r3, [r7, #4]
 416:	683b      	ldr	r3, [r7, #0]
 418:	1d19      	adds	r1, r3, #4
 41a:	6039      	str	r1, [r7, #0]
 41c:	6812      	ldr	r2, [r2, #0]
 41e:	601a      	str	r2, [r3, #0]
  for (pulDest = &_data; pulDest < &_edata;) {
 420:	683b      	ldr	r3, [r7, #0]
 422:	4a0b      	ldr	r2, [pc, #44]	; (450 <zero_loop+0x20>)
 424:	4293      	cmp	r3, r2
 426:	d3f3      	bcc.n	410 <ResetISR+0x10>
  }

  //
  // Zero fill the bss segment.
  //
  __asm("    ldr     r0, =_bss\n"
 428:	480a      	ldr	r0, [pc, #40]	; (454 <zero_loop+0x24>)
 42a:	490b      	ldr	r1, [pc, #44]	; (458 <zero_loop+0x28>)
 42c:	f04f 0200 	mov.w	r2, #0

00000430 <zero_loop>:
 430:	4288      	cmp	r0, r1
 432:	bfb8      	it	lt
 434:	f840 2b04 	strlt.w	r2, [r0], #4
 438:	dbfa      	blt.n	430 <zero_loop>
        "        blt     zero_loop");

  //
  // Call the application's entry point.
  //
  main();
 43a:	f7ff ffc5 	bl	3c8 <main>
}
 43e:	bf00      	nop
 440:	3708      	adds	r7, #8
 442:	46bd      	mov	sp, r7
 444:	bd80      	pop	{r7, pc}
 446:	bf00      	nop
 448:	00000700 	.word	0x00000700
 44c:	20000000 	.word	0x20000000
 450:	20000000 	.word	0x20000000
 454:	20000000 	.word	0x20000000
 458:	20000100 	.word	0x20000100

0000045c <NmiSR>:
// This is the code that gets called when the processor receives a NMI.  This
// simply enters an infinite loop, preserving the system state for examination
// by a debugger.
//
//*****************************************************************************
static void NmiSR(void) {
 45c:	b480      	push	{r7}
 45e:	af00      	add	r7, sp, #0
  //
  // Enter an infinite loop.
  //
  while (1) {
 460:	e7fe      	b.n	460 <NmiSR+0x4>

00000462 <FaultISR>:
// This is the code that gets called when the processor receives a fault
// interrupt.  This simply enters an infinite loop, preserving the system state
// for examination by a debugger.
//
//*****************************************************************************
static void FaultISR(void) {
 462:	b480      	push	{r7}
 464:	af00      	add	r7, sp, #0
  //
  // Enter an infinite loop.
  //
  while (1) {
 466:	e7fe      	b.n	466 <FaultISR+0x4>

00000468 <IntDefaultHandler>:
// This is the code that gets called when the processor receives an unexpected
// interrupt.  This simply enters an infinite loop, preserving the system state
// for examination by a debugger.
//
//*****************************************************************************
static void IntDefaultHandler(void) {
 468:	b480      	push	{r7}
 46a:	af00      	add	r7, sp, #0
  //
  // Go into an infinite loop.
  //
  while (1) {
 46c:	e7fe      	b.n	46c <IntDefaultHandler+0x4>

0000046e <SysTick_Handler>:
//
// Add default handlers for the following interrupts.
// Meant to be overridden by the application.
//
//*****************************************************************************
__attribute__((weak)) void SysTick_Handler(void) {
 46e:	b480      	push	{r7}
 470:	af00      	add	r7, sp, #0
  while (1) {
 472:	e7fe      	b.n	472 <SysTick_Handler+0x4>

00000474 <GPIOF_Handler>:
  }
}
__attribute__((weak)) void GPIOF_Handler(void) {
 474:	b480      	push	{r7}
 476:	af00      	add	r7, sp, #0
  while (1) {
 478:	e7fe      	b.n	478 <GPIOF_Handler+0x4>

0000047a <lcrh_databits>:
*   		    6: bit5 = 1, bit6 = 0.
*   		    7: bit5 = 0, bit6 = 1.
*   		    8: bit5 = 1, bit6 = 1  (default).
*   		   all other bits are returned = 0
******************************************************************************/
{
 47a:	b480      	push	{r7}
 47c:	b083      	sub	sp, #12
 47e:	af00      	add	r7, sp, #0
 480:	4603      	mov	r3, r0
 482:	71fb      	strb	r3, [r7, #7]
  if(( antal_databits < 5 ) || ( antal_databits > 8 ))
 484:	79fb      	ldrb	r3, [r7, #7]
 486:	2b04      	cmp	r3, #4
 488:	d902      	bls.n	490 <lcrh_databits+0x16>
 48a:	79fb      	ldrb	r3, [r7, #7]
 48c:	2b08      	cmp	r3, #8
 48e:	d901      	bls.n	494 <lcrh_databits+0x1a>
	antal_databits = 8;
 490:	2308      	movs	r3, #8
 492:	71fb      	strb	r3, [r7, #7]
  return(( (INT32U)antal_databits - 5 ) << 5 );  // Control bit 5-6, WLEN
 494:	79fb      	ldrb	r3, [r7, #7]
 496:	3b05      	subs	r3, #5
 498:	015b      	lsls	r3, r3, #5
}
 49a:	4618      	mov	r0, r3
 49c:	370c      	adds	r7, #12
 49e:	46bd      	mov	sp, r7
 4a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 4a4:	4770      	bx	lr

000004a6 <lcrh_stopbits>:
*   Function : sets bit 3 according to the wanted number of stop bits.
*   		    1 stpobit:  bit3 = 0 (default).
*   		    2 stopbits: bit3 = 1.
*   		   all other bits are returned = 0
******************************************************************************/
{
 4a6:	b480      	push	{r7}
 4a8:	b083      	sub	sp, #12
 4aa:	af00      	add	r7, sp, #0
 4ac:	4603      	mov	r3, r0
 4ae:	71fb      	strb	r3, [r7, #7]
  if( antal_stopbits == 2 )
 4b0:	79fb      	ldrb	r3, [r7, #7]
 4b2:	2b02      	cmp	r3, #2
 4b4:	d101      	bne.n	4ba <lcrh_stopbits+0x14>
    return( 0x00000008 );  		// return bit 3 = 1
 4b6:	2308      	movs	r3, #8
 4b8:	e000      	b.n	4bc <lcrh_stopbits+0x16>
  else
	return( 0x00000000 );		// return all zeros
 4ba:	2300      	movs	r3, #0
}
 4bc:	4618      	mov	r0, r3
 4be:	370c      	adds	r7, #12
 4c0:	46bd      	mov	sp, r7
 4c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 4c6:	4770      	bx	lr

000004c8 <lcrh_parity>:
*   		    '0':  10000110b.
*   		    '1':  10000010b.
*   		    'n':  00000000b.
*   		   all other bits are returned = 0
******************************************************************************/
{
 4c8:	b480      	push	{r7}
 4ca:	b085      	sub	sp, #20
 4cc:	af00      	add	r7, sp, #0
 4ce:	4603      	mov	r3, r0
 4d0:	71fb      	strb	r3, [r7, #7]
  INT32U result;

  switch( parity )
 4d2:	79fb      	ldrb	r3, [r7, #7]
 4d4:	2b6f      	cmp	r3, #111	; 0x6f
 4d6:	d00d      	beq.n	4f4 <lcrh_parity+0x2c>
 4d8:	2b6f      	cmp	r3, #111	; 0x6f
 4da:	dc14      	bgt.n	506 <lcrh_parity+0x3e>
 4dc:	2b65      	cmp	r3, #101	; 0x65
 4de:	d006      	beq.n	4ee <lcrh_parity+0x26>
 4e0:	2b65      	cmp	r3, #101	; 0x65
 4e2:	dc10      	bgt.n	506 <lcrh_parity+0x3e>
 4e4:	2b30      	cmp	r3, #48	; 0x30
 4e6:	d008      	beq.n	4fa <lcrh_parity+0x32>
 4e8:	2b31      	cmp	r3, #49	; 0x31
 4ea:	d009      	beq.n	500 <lcrh_parity+0x38>
 4ec:	e00b      	b.n	506 <lcrh_parity+0x3e>
  {
    case 'e':
      result = 0x00000006;
 4ee:	2306      	movs	r3, #6
 4f0:	60fb      	str	r3, [r7, #12]
      break;
 4f2:	e00a      	b.n	50a <lcrh_parity+0x42>
    case 'o':
      result = 0x00000002;
 4f4:	2302      	movs	r3, #2
 4f6:	60fb      	str	r3, [r7, #12]
      break;
 4f8:	e007      	b.n	50a <lcrh_parity+0x42>
    case '0':
      result = 0x00000086;
 4fa:	2386      	movs	r3, #134	; 0x86
 4fc:	60fb      	str	r3, [r7, #12]
      break;
 4fe:	e004      	b.n	50a <lcrh_parity+0x42>
    case '1':
      result = 0x00000082;
 500:	2382      	movs	r3, #130	; 0x82
 502:	60fb      	str	r3, [r7, #12]
      break;
 504:	e001      	b.n	50a <lcrh_parity+0x42>
    case 'n':
    default:
      result = 0x00000000;
 506:	2300      	movs	r3, #0
 508:	60fb      	str	r3, [r7, #12]
  }
  return( result );
 50a:	68fb      	ldr	r3, [r7, #12]
}
 50c:	4618      	mov	r0, r3
 50e:	3714      	adds	r7, #20
 510:	46bd      	mov	sp, r7
 512:	f85d 7b04 	ldr.w	r7, [sp], #4
 516:	4770      	bx	lr

00000518 <uart0_fifos_disable>:
/*****************************************************************************
*   Input    :
*   Output   :
*   Function : Enable the tx and rx fifos
******************************************************************************/
{
 518:	b480      	push	{r7}
 51a:	af00      	add	r7, sp, #0
  UART0_LCRH_R  &= 0xFFFFFFEF;
 51c:	4b05      	ldr	r3, [pc, #20]	; (534 <uart0_fifos_disable+0x1c>)
 51e:	681b      	ldr	r3, [r3, #0]
 520:	4a04      	ldr	r2, [pc, #16]	; (534 <uart0_fifos_disable+0x1c>)
 522:	f023 0310 	bic.w	r3, r3, #16
 526:	6013      	str	r3, [r2, #0]
}
 528:	bf00      	nop
 52a:	46bd      	mov	sp, r7
 52c:	f85d 7b04 	ldr.w	r7, [sp], #4
 530:	4770      	bx	lr
 532:	bf00      	nop
 534:	4000c02c 	.word	0x4000c02c

00000538 <uart0_tx_rdy>:

extern BOOLEAN uart0_tx_rdy()
/*****************************************************************************
*   Function : See module specification (.h-file).
*****************************************************************************/
{
 538:	b480      	push	{r7}
 53a:	af00      	add	r7, sp, #0
  return( UART0_FR_R & UART_FR_TXFE );
 53c:	4b05      	ldr	r3, [pc, #20]	; (554 <uart0_tx_rdy+0x1c>)
 53e:	681b      	ldr	r3, [r3, #0]
 540:	b2db      	uxtb	r3, r3
 542:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 546:	b2db      	uxtb	r3, r3
}
 548:	4618      	mov	r0, r3
 54a:	46bd      	mov	sp, r7
 54c:	f85d 7b04 	ldr.w	r7, [sp], #4
 550:	4770      	bx	lr
 552:	bf00      	nop
 554:	4000c018 	.word	0x4000c018

00000558 <uart0_putc>:

extern void uart0_putc( INT8U ch )
/*****************************************************************************
*   Function : See module specification (.h-file).
*****************************************************************************/
{
 558:	b480      	push	{r7}
 55a:	b083      	sub	sp, #12
 55c:	af00      	add	r7, sp, #0
 55e:	4603      	mov	r3, r0
 560:	71fb      	strb	r3, [r7, #7]
  UART0_DR_R = ch;
 562:	4a04      	ldr	r2, [pc, #16]	; (574 <uart0_putc+0x1c>)
 564:	79fb      	ldrb	r3, [r7, #7]
 566:	6013      	str	r3, [r2, #0]
}
 568:	bf00      	nop
 56a:	370c      	adds	r7, #12
 56c:	46bd      	mov	sp, r7
 56e:	f85d 7b04 	ldr.w	r7, [sp], #4
 572:	4770      	bx	lr
 574:	4000c000 	.word	0x4000c000

00000578 <uart0_init>:

extern void uart0_init( INT32U baud_rate, INT8U databits, INT8U stopbits, INT8U parity )
/*****************************************************************************
*   Function : See module specification (.h-file).
*****************************************************************************/
{
 578:	b590      	push	{r4, r7, lr}
 57a:	b085      	sub	sp, #20
 57c:	af00      	add	r7, sp, #0
 57e:	6078      	str	r0, [r7, #4]
 580:	4608      	mov	r0, r1
 582:	4611      	mov	r1, r2
 584:	461a      	mov	r2, r3
 586:	4603      	mov	r3, r0
 588:	70fb      	strb	r3, [r7, #3]
 58a:	460b      	mov	r3, r1
 58c:	70bb      	strb	r3, [r7, #2]
 58e:	4613      	mov	r3, r2
 590:	707b      	strb	r3, [r7, #1]
  INT32U BRD;

  #ifndef E_PORTA
  #define E_PORTA
  SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOA;					// Enable clock for Port A
 592:	4b2d      	ldr	r3, [pc, #180]	; (648 <uart0_init+0xd0>)
 594:	681b      	ldr	r3, [r3, #0]
 596:	4a2c      	ldr	r2, [pc, #176]	; (648 <uart0_init+0xd0>)
 598:	f043 0301 	orr.w	r3, r3, #1
 59c:	6013      	str	r3, [r2, #0]
  #endif

  #ifndef E_UART0
  #define E_UART0
  SYSCTL_RCGC1_R |= SYSCTL_RCGC1_UART0;					// Enable clock for UART 0
 59e:	4b2b      	ldr	r3, [pc, #172]	; (64c <uart0_init+0xd4>)
 5a0:	681b      	ldr	r3, [r3, #0]
 5a2:	4a2a      	ldr	r2, [pc, #168]	; (64c <uart0_init+0xd4>)
 5a4:	f043 0301 	orr.w	r3, r3, #1
 5a8:	6013      	str	r3, [r2, #0]
  #endif

  GPIO_PORTA_AFSEL_R |= 0x00000003;		// set PA0 og PA1 to alternativ function (uart0)
 5aa:	4b29      	ldr	r3, [pc, #164]	; (650 <uart0_init+0xd8>)
 5ac:	681b      	ldr	r3, [r3, #0]
 5ae:	4a28      	ldr	r2, [pc, #160]	; (650 <uart0_init+0xd8>)
 5b0:	f043 0303 	orr.w	r3, r3, #3
 5b4:	6013      	str	r3, [r2, #0]
  GPIO_PORTA_DIR_R   |= 0x00000002;     // set PA1 (uart0 tx) to output
 5b6:	4b27      	ldr	r3, [pc, #156]	; (654 <uart0_init+0xdc>)
 5b8:	681b      	ldr	r3, [r3, #0]
 5ba:	4a26      	ldr	r2, [pc, #152]	; (654 <uart0_init+0xdc>)
 5bc:	f043 0302 	orr.w	r3, r3, #2
 5c0:	6013      	str	r3, [r2, #0]
  GPIO_PORTA_DIR_R   &= 0xFFFFFFFE;     // set PA0 (uart0 rx) to input
 5c2:	4b24      	ldr	r3, [pc, #144]	; (654 <uart0_init+0xdc>)
 5c4:	681b      	ldr	r3, [r3, #0]
 5c6:	4a23      	ldr	r2, [pc, #140]	; (654 <uart0_init+0xdc>)
 5c8:	f023 0301 	bic.w	r3, r3, #1
 5cc:	6013      	str	r3, [r2, #0]
  GPIO_PORTA_DEN_R   |= 0x00000003;		// enable digital operation of PA0 and PA1
 5ce:	4b22      	ldr	r3, [pc, #136]	; (658 <uart0_init+0xe0>)
 5d0:	681b      	ldr	r3, [r3, #0]
 5d2:	4a21      	ldr	r2, [pc, #132]	; (658 <uart0_init+0xe0>)
 5d4:	f043 0303 	orr.w	r3, r3, #3
 5d8:	6013      	str	r3, [r2, #0]
  //GPIO_PORTA_PUR_R   |= 0x00000002;

  BRD = 64000000 / baud_rate;   	// X-sys*64/(16*baudrate) = 16M*4/baudrate
 5da:	4a20      	ldr	r2, [pc, #128]	; (65c <uart0_init+0xe4>)
 5dc:	687b      	ldr	r3, [r7, #4]
 5de:	fbb2 f3f3 	udiv	r3, r2, r3
 5e2:	60fb      	str	r3, [r7, #12]
  UART0_IBRD_R = BRD / 64;
 5e4:	4a1e      	ldr	r2, [pc, #120]	; (660 <uart0_init+0xe8>)
 5e6:	68fb      	ldr	r3, [r7, #12]
 5e8:	099b      	lsrs	r3, r3, #6
 5ea:	6013      	str	r3, [r2, #0]
  UART0_FBRD_R = BRD & 0x0000003F;
 5ec:	4a1d      	ldr	r2, [pc, #116]	; (664 <uart0_init+0xec>)
 5ee:	68fb      	ldr	r3, [r7, #12]
 5f0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 5f4:	6013      	str	r3, [r2, #0]

  UART0_LCRH_R  = lcrh_databits( databits );
 5f6:	4c1c      	ldr	r4, [pc, #112]	; (668 <uart0_init+0xf0>)
 5f8:	78fb      	ldrb	r3, [r7, #3]
 5fa:	4618      	mov	r0, r3
 5fc:	f7ff ff3d 	bl	47a <lcrh_databits>
 600:	4603      	mov	r3, r0
 602:	6023      	str	r3, [r4, #0]
  UART0_LCRH_R += lcrh_stopbits( stopbits );
 604:	78bb      	ldrb	r3, [r7, #2]
 606:	4618      	mov	r0, r3
 608:	f7ff ff4d 	bl	4a6 <lcrh_stopbits>
 60c:	4602      	mov	r2, r0
 60e:	4b16      	ldr	r3, [pc, #88]	; (668 <uart0_init+0xf0>)
 610:	681b      	ldr	r3, [r3, #0]
 612:	4915      	ldr	r1, [pc, #84]	; (668 <uart0_init+0xf0>)
 614:	4413      	add	r3, r2
 616:	600b      	str	r3, [r1, #0]
  UART0_LCRH_R += lcrh_parity( parity );
 618:	787b      	ldrb	r3, [r7, #1]
 61a:	4618      	mov	r0, r3
 61c:	f7ff ff54 	bl	4c8 <lcrh_parity>
 620:	4602      	mov	r2, r0
 622:	4b11      	ldr	r3, [pc, #68]	; (668 <uart0_init+0xf0>)
 624:	681b      	ldr	r3, [r3, #0]
 626:	4910      	ldr	r1, [pc, #64]	; (668 <uart0_init+0xf0>)
 628:	4413      	add	r3, r2
 62a:	600b      	str	r3, [r1, #0]

  uart0_fifos_disable();
 62c:	f7ff ff74 	bl	518 <uart0_fifos_disable>

  UART0_CTL_R  |= (UART_CTL_UARTEN | UART_CTL_TXE );  // Enable UART
 630:	4b0e      	ldr	r3, [pc, #56]	; (66c <uart0_init+0xf4>)
 632:	681b      	ldr	r3, [r3, #0]
 634:	4a0d      	ldr	r2, [pc, #52]	; (66c <uart0_init+0xf4>)
 636:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 63a:	f043 0301 	orr.w	r3, r3, #1
 63e:	6013      	str	r3, [r2, #0]
}
 640:	bf00      	nop
 642:	3714      	adds	r7, #20
 644:	46bd      	mov	sp, r7
 646:	bd90      	pop	{r4, r7, pc}
 648:	400fe108 	.word	0x400fe108
 64c:	400fe104 	.word	0x400fe104
 650:	40004420 	.word	0x40004420
 654:	40004400 	.word	0x40004400
 658:	4000451c 	.word	0x4000451c
 65c:	03d09000 	.word	0x03d09000
 660:	4000c024 	.word	0x4000c024
 664:	4000c028 	.word	0x4000c028
 668:	4000c02c 	.word	0x4000c02c
 66c:	4000c030 	.word	0x4000c030

00000670 <uart_putc>:
#include "uart0.h"

void uart_putc(char ch) {
 670:	b580      	push	{r7, lr}
 672:	b082      	sub	sp, #8
 674:	af00      	add	r7, sp, #0
 676:	4603      	mov	r3, r0
 678:	71fb      	strb	r3, [r7, #7]
    while(!uart0_tx_rdy());
 67a:	bf00      	nop
 67c:	f7ff ff5c 	bl	538 <uart0_tx_rdy>
 680:	4603      	mov	r3, r0
 682:	2b00      	cmp	r3, #0
 684:	d0fa      	beq.n	67c <uart_putc+0xc>
    uart0_putc(ch);
 686:	79fb      	ldrb	r3, [r7, #7]
 688:	4618      	mov	r0, r3
 68a:	f7ff ff65 	bl	558 <uart0_putc>
}
 68e:	bf00      	nop
 690:	3708      	adds	r7, #8
 692:	46bd      	mov	sp, r7
 694:	bd80      	pop	{r7, pc}

00000696 <uart_init>:
    *buffer_pointer = '\0';

    return buffer;
}

void uart_init() {
 696:	b580      	push	{r7, lr}
 698:	af00      	add	r7, sp, #0
    uart0_init(9600, 8, 0, 0);
 69a:	2300      	movs	r3, #0
 69c:	2200      	movs	r2, #0
 69e:	2108      	movs	r1, #8
 6a0:	f44f 5016 	mov.w	r0, #9600	; 0x2580
 6a4:	f7ff ff68 	bl	578 <uart0_init>
}
 6a8:	bf00      	nop
 6aa:	bd80      	pop	{r7, pc}

000006ac <uart_put_string>:

void uart_put_string(char* str) {
 6ac:	b580      	push	{r7, lr}
 6ae:	b082      	sub	sp, #8
 6b0:	af00      	add	r7, sp, #0
 6b2:	6078      	str	r0, [r7, #4]
    while(*str) uart_putc(*str++);
 6b4:	e006      	b.n	6c4 <uart_put_string+0x18>
 6b6:	687b      	ldr	r3, [r7, #4]
 6b8:	1c5a      	adds	r2, r3, #1
 6ba:	607a      	str	r2, [r7, #4]
 6bc:	781b      	ldrb	r3, [r3, #0]
 6be:	4618      	mov	r0, r3
 6c0:	f7ff ffd6 	bl	670 <uart_putc>
 6c4:	687b      	ldr	r3, [r7, #4]
 6c6:	781b      	ldrb	r3, [r3, #0]
 6c8:	2b00      	cmp	r3, #0
 6ca:	d1f4      	bne.n	6b6 <uart_put_string+0xa>
}
 6cc:	bf00      	nop
 6ce:	bf00      	nop
 6d0:	3708      	adds	r7, #8
 6d2:	46bd      	mov	sp, r7
 6d4:	bd80      	pop	{r7, pc}

000006d6 <uart_put_stringln>:

void uart_put_stringln(char* str) {
 6d6:	b580      	push	{r7, lr}
 6d8:	b082      	sub	sp, #8
 6da:	af00      	add	r7, sp, #0
 6dc:	6078      	str	r0, [r7, #4]
    uart_put_string(str);
 6de:	6878      	ldr	r0, [r7, #4]
 6e0:	f7ff ffe4 	bl	6ac <uart_put_string>
    uart_putc('\n');
 6e4:	200a      	movs	r0, #10
 6e6:	f7ff ffc3 	bl	670 <uart_putc>
}
 6ea:	bf00      	nop
 6ec:	3708      	adds	r7, #8
 6ee:	46bd      	mov	sp, r7
 6f0:	bd80      	pop	{r7, pc}
 6f2:	0000      	movs	r0, r0
 6f4:	72617453 	.word	0x72617453
 6f8:	676e6974 	.word	0x676e6974
 6fc:	002e2e2e 	.word	0x002e2e2e
